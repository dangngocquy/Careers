{"version":3,"file":"static/js/348.479157ae.chunk.js","mappings":"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","sources":["components/NotFound.jsx","components/SearchHome/SearchHome.jsx","components/SearchHome/SearchMobile.jsx","components/Alljob.jsx","components/Timkiemvieclam.jsx","components/design/Slug.jsx"],"sourcesContent":["import React from 'react';\r\nconst NotFound = () => {\r\n  return (\r\n    <>\r\n      <title>Không tìm thấy trang</title>\r\n      <div>\r\n        <div className=\"rc-page__not-found\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"500\" height=\"500\" viewBox=\"0 0 1920 1080\">\r\n            <title>404</title>\r\n            <g id=\"Layer_12 yellow-back-fig\" data-name=\"Layer 12\">\r\n              <path className=\"cls-1\" d=\"M600.87,872H156a4,4,0,0,0-3.78,4.19h0a4,4,0,0,0,3.78,4.19H600.87a4,4,0,0,0,3.78-4.19h0A4,4,0,0,0,600.87,872Z\"></path>\r\n              <rect className=\"cls-1\" x=\"680.91\" y=\"871.98\" width=\"513.38\" height=\"8.39\" rx=\"4.19\" ry=\"4.19\"></rect>\r\n              <path className=\"cls-1\" d=\"M1480,876.17h0c0,2.32,2.37,4.19,5.3,4.19h350.61c2.93,0,5.3-1.88,5.3-4.19h0c0-2.32-2.37-4.19-5.3-4.19H1485.26C1482.33,872,1480,873.86,1480,876.17Z\"></path>\r\n              <rect className=\"cls-1\" x=\"492.21\" y=\"920.64\" width=\"249.8\" height=\"8.39\" rx=\"4.19\" ry=\"4.19\"></rect>\r\n              <path className=\"cls-1\" d=\"M1549.14,924.84h0a4.19,4.19,0,0,0-4.19-4.19H1067.46a14.66,14.66,0,0,1,.35,3.21v1A4.19,4.19,0,0,0,1072,929h472.94A4.19,4.19,0,0,0,1549.14,924.84Z\"></path>\r\n              <path className=\"cls-1\" d=\"M865.5,924.84h0a4.19,4.19,0,0,0,4.19,4.19h82.37a12.28,12.28,0,0,1-.19-2v-2.17a4.19,4.19,0,0,0-4.19-4.19h-78A4.19,4.19,0,0,0,865.5,924.84Z\"></path>\r\n              <rect className=\"cls-1\" x=\"915.6\" y=\"981.47\" width=\"54.72\" height=\"8.39\" rx=\"4.19\" ry=\"4.19\"></rect>\r\n              <path className=\"cls-1\" d=\"M730.33,985.67h0c0,2.32,4.23,4.19,9.44,4.19h104.3c5.22,0,9.44-1.88,9.44-4.19h0c0-2.32-4.23-4.19-9.44-4.19H739.78C734.56,981.47,730.33,983.35,730.33,985.67Z\"></path>\r\n              <rect className=\"cls-1\" x=\"997.06\" y=\"981.47\" width=\"78.11\" height=\"8.39\" rx=\"4.19\" ry=\"4.19\"></rect>\r\n              <g id=\"round-conf\">\r\n                <path className=\"cls-1 circle c1\" d=\"M536.41,155.14a17.77,17.77,0,1,0,17.77,17.77A17.77,17.77,0,0,0,536.41,155.14Zm0,28.68a10.9,10.9,0,1,1,10.9-10.9A10.9,10.9,0,0,1,536.41,183.81Z\"></path>\r\n                <path className=\"cls-1 circle c2\" d=\"M1345.09,82.44a17.77,17.77,0,1,0,17.77,17.77A17.77,17.77,0,0,0,1345.09,82.44Zm0,28.68a10.9,10.9,0,1,1,10.9-10.9A10.9,10.9,0,0,1,1345.09,111.12Z\"></path>\r\n                <path className=\"cls-1 circle c3\" d=\"M70.12,363A17.77,17.77,0,1,0,87.89,380.8,17.77,17.77,0,0,0,70.12,363Zm0,28.68A10.9,10.9,0,1,1,81,380.8,10.9,10.9,0,0,1,70.12,391.7Z\"></path>\r\n                <path className=\"cls-1 circle c4\" d=\"M170.47,751.82a17.77,17.77,0,1,0,17.77,17.77A17.77,17.77,0,0,0,170.47,751.82Zm0,28.68a10.9,10.9,0,1,1,10.9-10.9A10.9,10.9,0,0,1,170.47,780.5Z\"></path>\r\n                <path className=\"cls-1 circle c5\" d=\"M1457.34,762.73a17.77,17.77,0,1,0,17.77,17.77A17.77,17.77,0,0,0,1457.34,762.73Zm0,28.68a10.9,10.9,0,1,1,10.9-10.9A10.9,10.9,0,0,1,1457.34,791.4Z\"></path>\r\n                <path className=\"cls-1 circle c6\" d=\"M1829.15,407.49a17.77,17.77,0,1,0,17.77,17.77A17.77,17.77,0,0,0,1829.15,407.49Zm0,28.68a10.9,10.9,0,1,1,10.9-10.9A10.9,10.9,0,0,1,1829.15,436.17Z\"></path>\r\n              </g>\r\n            </g>\r\n            <g id=\"fortyfour\" data-name=\"Layer 2\">\r\n              <g className=\"four a\">\r\n                <rect className=\"cls-2\" x=\"233.74\" y=\"391.14\" width=\"120.71\" height=\"466.29\" rx=\"57.1\" ry=\"57.1\" transform=\"translate(918.39 330.19) rotate(90)\"></rect>\r\n                <rect className=\"cls-3\" x=\"333.83\" y=\"475.1\" width=\"120.71\" height=\"396.88\" rx=\"60.36\" ry=\"60.36\"></rect>\r\n                <rect className=\"cls-3\" x=\"197.13\" y=\"122.89\" width=\"120.71\" height=\"604.75\" rx=\"60.36\" ry=\"60.36\" transform=\"translate(290.49 -70.78) rotate(35)\"></rect>\r\n              </g>\r\n              <g className=\"four b\">\r\n                <rect className=\"cls-2\" x=\"1558.84\" y=\"391.91\" width=\"120.71\" height=\"466.29\" rx=\"57.1\" ry=\"57.1\" transform=\"translate(2244.26 -994.14) rotate(90)\"></rect>\r\n                <rect className=\"cls-3\" x=\"1658.92\" y=\"475.87\" width=\"120.71\" height=\"396.88\" rx=\"60.36\" ry=\"60.36\"></rect>\r\n                <rect className=\"cls-3\" x=\"1522.22\" y=\"123.66\" width=\"120.71\" height=\"604.75\" rx=\"60.36\" ry=\"60.36\" transform=\"translate(530.57 -830.68) rotate(35)\"></rect>\r\n              </g>\r\n              <path className=\"cls-3\" id=\"ou\" d=\"M956.54,168.2c-194.34,0-351.89,157.55-351.89,351.89S762.19,872,956.54,872s351.89-157.55,351.89-351.89S1150.88,168.2,956.54,168.2Zm0,584.49c-128.46,0-232.6-104.14-232.6-232.6s104.14-232.6,232.6-232.6,232.6,104.14,232.6,232.6S1085,752.69,956.54,752.69Z\"></path>\r\n            </g>\r\n            <g id=\"umbrella\" data-name=\"Layer 3\">\r\n              <g>\r\n                <circle className=\"cls-4\" cx=\"1187.53\" cy=\"240.3\" r=\"7.66\" transform=\"translate(236.36 990.8) rotate(-49.71)\"></circle>\r\n                <g>\r\n                  <path className=\"cls-5\" d=\"M1219.56,359.67l55,100.52c32.7-48.48-6.87-142.43-91.75-214.38-84.41-71.55-183-95.33-225.81-56l114.21,44.14Z\"></path>\r\n                  <path className=\"cls-6\" d=\"M1182.79,245.81c-84.41-71.55-183-95.33-225.81-56l114.21,44.14Z\"></path>\r\n                  <polygon className=\"cls-7\" points=\"1182.79 245.81 1071.19 233.91 1219.56 359.67 1182.79 245.81\"></polygon>\r\n                </g>\r\n                <polygon className=\"cls-8\" points=\"1180.91 409.02 1274.54 460.19 1219.56 359.67 1071.19 233.91 956.98 189.76 1021.95 274.29 1180.91 409.02\"></polygon>\r\n                <g>\r\n                  <rect className=\"cls-4\" x=\"997.45\" y=\"358.35\" width=\"175.58\" height=\"5.1\" transform=\"translate(108.21 955.38) rotate(-49.71)\"></rect>\r\n                  <rect className=\"cls-4\" x=\"1028.09\" y=\"399.36\" width=\"21.46\" height=\"32.27\" rx=\"10.73\" ry=\"10.73\" transform=\"translate(515.04 -573.16) rotate(40.29)\"></rect>\r\n                </g>\r\n              </g>\r\n            </g>\r\n            <g id=\"pillow\" data-name=\"Layer 4\">\r\n              <path className=\"cls-1\" d=\"M754,627.07c7,.54,12.92-2.82,13.35-7.59s-4.95-9.24-12-9.87a18.55,18.55,0,0,0-2.17,0l-74.9-81.64c0-.1,0-.19,0-.29,0-7.09-4-12.83-8.8-12.81s-8.75,5.77-8.73,12.87c0,0,0,.09,0,.13l-50.21,46.07h-.09c-7.06-.63-13.14,2.77-13.57,7.59s4.87,9.16,11.85,9.84l76.08,82.92s0,0,0,.06c0,7.09,4,12.83,8.8,12.81s8.65-5.66,8.71-12.65Z\"></path>\r\n              <path className=\"cls-9\" d=\"M669.46,514.82c-4.77-.83-8.75,5.77-8.73,12.87,0,0,0,.09,0,.13l-50.21,46.07h-.09c-7.06-.63-13.14,2.77-13.57,7.59s4.87,9.16,11.85,9.84l76.08,82.92s0,0,0,.06c0,7.09,4,12.83,8.8,12.81s8.65-5.66,8.71-12.65C570.55,573,702.07,520.47,669.46,514.82Z\"></path>\r\n            </g>\r\n            <g id=\"cup\" data-name=\"Layer 7\">\r\n              <polygon className=\"cls-1\" points=\"1173.69 748.21 1140.52 715.42 1195.79 647.35 1241.13 692.16 1173.69 748.21\"></polygon>\r\n              <polygon className=\"cls-8\" points=\"1173.69 748.21 1140.52 715.42 1143.93 711.27 1177.81 744.75 1173.69 748.21\"></polygon>\r\n              <polygon className=\"cls-5\" points=\"1194.68 731.46 1157.04 694.24 1183.8 661.7 1226.91 704.32 1194.68 731.46\"></polygon>\r\n              <g className=\"cls-10\">\r\n                <path className=\"cls-8\" d=\"M1176.32,667.78h0a4.19,4.19,0,0,1,4.19,4.19v33.54a0,0,0,0,1,0,0h-8.38a0,0,0,0,1,0,0V672a4.19,4.19,0,0,1,4.19-4.19Z\" transform=\"translate(822.53 -628.67) rotate(44.67)\"></path>\r\n                <path className=\"cls-8\" d=\"M1172.73,709.7l23.58-23.85a4.19,4.19,0,0,1,5.92,0h0a4.19,4.19,0,0,1,0,5.92l-23.58,23.85Z\"></path>\r\n                <path className=\"cls-8\" d=\"M1185.11,722.09l23.58-23.85a4.19,4.19,0,0,1,5.92,0h0a4.19,4.19,0,0,1,0,5.92L1191.06,728Z\"></path>\r\n              </g>\r\n              <path className=\"cls-5\" d=\"M1197.85,660.5h45.69a5.7,5.7,0,0,1,5.7,5.7v8.32a0,0,0,0,1,0,0h-57.09a0,0,0,0,1,0,0v-8.32A5.7,5.7,0,0,1,1197.85,660.5Z\" transform=\"translate(829.53 -667.66) rotate(45)\"></path>\r\n              <path className=\"cls-8\" d=\"M1191.49,664.74h53.94a5.25,5.25,0,0,1,5.25,5.25v4.79a0,0,0,0,1,0,0h-64.44a0,0,0,0,1,0,0V670a5.25,5.25,0,0,1,5.25-5.25Z\" transform=\"translate(822.83 -663.17) rotate(44.67)\"></path>\r\n            </g>\r\n            <g id=\"clock\" data-name=\"Layer 8\">\r\n              <circle className=\"cls-5\" cx=\"847.7\" cy=\"247.59\" r=\"74.66\" transform=\"translate(-32.91 314.05) rotate(-20.6)\"></circle>\r\n              <circle className=\"cls-1\" cx=\"847.7\" cy=\"247.59\" r=\"63.44\" transform=\"translate(-32.91 314.05) rotate(-20.6)\"></circle>\r\n              <rect className=\"cls-3 clock-hand-1\" x=\"845\" y=\"189.5\" width=\"6.04\" height=\"58\" rx=\"3.02\" ry=\"3.02\"></rect>\r\n              <rect className=\"cls-3 clock-hand-2\" x=\"845\" y=\"209.5\" width=\"6.04\" height=\"38\" rx=\"3.02\" ry=\"3.02\" transform=\"translate(1611.22 -230.4) rotate(130.4)\"></rect>\r\n              <circle className=\"cls-3\" cx=\"847.7\" cy=\"247.59\" transform=\"translate(-32.91 314.05) rotate(-20.6)\" r=\"3\"></circle>\r\n            </g>\r\n            <g id=\"box\" data-name=\"Layer 9\">\r\n              <g id=\"box-top\">\r\n                <polygon className=\"cls-8\" points=\"569.71 382.28 653.74 329.39 747.13 320.1 679.2 369.85 569.71 382.28\"></polygon>\r\n                <polygon className=\"cls-5\" points=\"691.95 367.2 570.87 392.34 565.32 383.35 687.8 357.45 691.95 367.2\"></polygon>\r\n                <polygon className=\"cls-5\" points=\"661.54 337.48 570.87 392.34 562.42 378.92 652.25 322.38 658.12 321.34 661.54 337.48\"></polygon>\r\n                <polygon className=\"cls-7\" points=\"661.54 337.48 570.87 392.34 562.42 378.92 652.25 322.38 658.12 321.34 661.54 337.48\"></polygon>\r\n                <polygon className=\"cls-5\" points=\"747.13 320.1 661.54 337.48 652.25 322.38 738.4 307.1 747.13 320.1\"></polygon>\r\n              </g>\r\n              <path className=\"cls-5\" d=\"M588.28,420.26s3.44,5.2,5.19,8l43.1,68.48,158.81-100-43.1-68.48q-2.63-4.17-5.47-8Z\"></path>\r\n              <path className=\"cls-7\" d=\"M588.28,420.26s3.44,5.2,5.19,8l43.1,68.48,158.81-100-43.1-68.48q-2.63-4.17-5.47-8Z\"></path>\r\n              <rect className=\"cls-5\" x=\"693.73\" y=\"335.51\" width=\"83.99\" height=\"90.58\" transform=\"translate(-89.78 450.43) rotate(-32.19)\"></rect>\r\n            </g>\r\n            <g id=\"rucksack\" data-name=\"Layer 6\">\r\n              <g id=\"stripe\">\r\n                <path className=\"cls-12\" d=\"M1200.32,473.91h0a13.74,13.74,0,0,0-18.41,7.44l-55,129.86a14.82,14.82,0,0,0,7.13,19.21h0a13.74,13.74,0,0,0,18.41-7.44l55-129.86A14.82,14.82,0,0,0,1200.32,473.91Z\"></path>\r\n                <path className=\"cls-13\" d=\"M1202.18,606.34h0a14,14,0,0,0-16.18-11.8l-48.83,9c-7.59,1.4-12.66,9-11.31,16.89h0a14,14,0,0,0,16.18,11.8l48.83-9C1198.46,621.82,1203.53,614.26,1202.18,606.34Z\"></path>\r\n              </g>\r\n              <path className=\"cls-8\" d=\"M1300.86,603l-122.93,22.74-15.44-90.91c-5.75-33.86,15.89-66.17,48.34-72.18l11.58-2.08c32.45-6,57.26,17.66,63,51.51Z\"></path>\r\n              <path className=\"cls-1\" d=\"M1307,601.91l-112.32,20.78-15.9-93.61c-5.5-32.36,15.19-63.25,46.2-69h0c31-5.74,60.62,15.85,66.12,48.21Z\"></path>\r\n              <path className=\"cls-8\" d=\"M1296.76,603.8,1215,618.92l-4.89-28.77c-2.11-12.42,5.83-24.27,17.73-26.47l38.67-7.15c11.9-2.2,23.26,6.08,25.37,18.5Z\"></path>\r\n              <path className=\"cls-5\" d=\"M1296.76,603.8l-73.41,13.58-4.92-29c-2-11.62,5.45-22.72,16.6-24.78l33.07-6.12c11.14-2.06,21.77,5.69,23.75,17.32Z\"></path>\r\n              <path className=\"cls-4\" d=\"M1231.77,469.69l-13.42,2.48a10.25,10.25,0,0,0-8,11.92l2.38,14a9.9,9.9,0,0,0,11.42,8.33l13.42-2.48a10.25,10.25,0,0,0,8-11.92l-2.38-14A9.9,9.9,0,0,0,1231.77,469.69Zm7.17,20.84a6.39,6.39,0,0,1-5,7.43l-8.36,1.55a6.17,6.17,0,0,1-7.12-5.19l-1.48-8.73a6.39,6.39,0,0,1,5-7.43l8.36-1.55a6.17,6.17,0,0,1,7.12,5.19Z\"></path>\r\n              <path className=\"cls-14\" d=\"M1233.74,471.13l-13.42,2.48a10.25,10.25,0,0,0-8,11.92l2.38,14a9.9,9.9,0,0,0,11.42,8.33l13.42-2.48a10.25,10.25,0,0,0,8-11.92l-2.38-14A9.9,9.9,0,0,0,1233.74,471.13Zm7.17,20.84a6.39,6.39,0,0,1-5,7.43l-8.36,1.55a6.17,6.17,0,0,1-7.12-5.19L1219,487a6.39,6.39,0,0,1,5-7.43l8.36-1.55a6.17,6.17,0,0,1,7.12,5.19Z\"></path>\r\n            </g>\r\n            <g id=\"bike\" data-name=\"Layer 5\">\r\n              <path className=\"cls-8 wheel\" d=\"M1139.82,780.44a76.59,76.59,0,1,0-57.9,91.53A76.59,76.59,0,0,0,1139.82,780.44Zm-28.12,6.33a47.59,47.59,0,0,1,.83,15.8c-30.14-6.28-47.68-21.65-54.39-52.52A47.73,47.73,0,0,1,1111.69,786.77Zm-70.46-30.9c10.35,26.88,10.14,50.4-13.73,70.77a47.67,47.67,0,0,1,13.73-70.77Zm34.35,88a47.55,47.55,0,0,1-34.94-5.62c16.8-20.36,41.71-25.94,67.09-19.46A47.66,47.66,0,0,1,1075.58,843.85Z\"></path>\r\n              <path className=\"cls-8 wheel\" d=\"M864.89,789.69a76.59,76.59,0,1,0-66.13,85.78A76.59,76.59,0,0,0,864.89,789.69Zm-28.59,3.7a47.59,47.59,0,0,1-.64,15.81c-29.43-9-45.47-26-49.3-57.33A47.73,47.73,0,0,1,836.3,793.39ZM769,756.1c7.82,27.72,5.43,51.12-20.22,69.2A47.67,47.67,0,0,1,769,756.1Zm26.06,90.78a47.55,47.55,0,0,1-34.27-8.83c18.61-18.72,43.93-22,68.6-13.16A47.66,47.66,0,0,1,795.06,846.88Z\"></path>\r\n              <g>\r\n                <rect className=\"cls-1\" x=\"871.39\" y=\"693.37\" width=\"12.87\" height=\"53.21\" transform=\"translate(-165.97 273.38) rotate(-16.19)\"></rect>\r\n                <path className=\"cls-5\" d=\"M813.93,679.35c-3.72-5.2,2.24-18.5,9.16-16.13,33.43,11.46,73.85,10.45,73.85,10.45,8.84.15,14.44,10.34,7.27,15.48-14.36,8.79-33.13,17-56.35,9.76C830.17,693.41,819.83,687.6,813.93,679.35Z\"></path>\r\n                <path className=\"cls-7\" d=\"M813.93,679.35c-3.72-5.2,2.24-18.5,9.16-16.13,33.43,11.46,73.85,10.45,73.85,10.45,8.84.15,14.44,10.34,7.27,15.48-14.36,8.79-33.13,17-56.35,9.76C830.17,693.41,819.83,687.6,813.93,679.35Z\"></path>\r\n                <path className=\"cls-5\" d=\"M817.15,680.06c-3.59-5,1.69-16.51,8.37-14.22,32.3,11.09,71.41,7.83,71.41,7.83,8.54.14,17.45,9.94,7.43,15.88-13.87,8.51-32,16.44-54.44,9.44C832.84,693.67,822.85,688,817.15,680.06Z\"></path>\r\n              </g>\r\n              <g>\r\n                <circle className=\"cls-9\" cx=\"1022.66\" cy=\"599.55\" r=\"11.57\" transform=\"translate(-4.86 8.38) rotate(-0.47)\"></circle>\r\n                <path className=\"cls-1\" d=\"M1069.76,792.37l-34.89-96.74,1.93-.8-1.71-4.15-1.74.72-13.26-36.76,1.27-.42-2.25-6.76,5.94-2-2.57-7.72-9.7,3.22c-11.55-22.55,2-36.33,15-41.86l-5.57-8.81c-23,10.29-29.61,28.75-19.53,54l-9.38,3.12,2.56,7.72,5.47-1.82,2.25,6.76,2.36-.78,13.62,37.76-2.35,1,1.71,4.15,2.16-.89,34.65,96.09a7.47,7.47,0,0,0,9.56,4.49h0A7.47,7.47,0,0,0,1069.76,792.37Z\"></path>\r\n                <circle className=\"cls-11\" cx=\"1027.9\" cy=\"587.94\" r=\"12.99\" transform=\"translate(-4.77 8.42) rotate(-0.47)\"></circle>\r\n              </g>\r\n              <path className=\"cls-5\" d=\"M1021.29,654l-17.73,6.15,1.72,5.59-31.41,82.36c-19.35,32.53-66.3,36.72-75.56,16.68l-7.09-21.5L879,747.1l3.28,10.09-94.65,33.95c-11.49,2.29-11.85,15.79-2.61,17.84,0,0,39.11,3.66,103,9.5a92.75,92.75,0,0,0,40.89-5.29c44.32-16.56,57.73-50.67,57.73-50.67l26.82-67.26a1.37,1.37,0,0,1,2.53,0l1.42,3.33,17.75-7.62Z\"></path>\r\n              <path className=\"cls-7\" d=\"M1021.29,654l-17.73,6.15,1.72,5.59-31.41,82.36c-19.35,32.53-66.3,36.72-75.56,16.68l-7.09-21.5L879,747.1l3.28,10.09-94.65,33.95c-11.49,2.29-11.85,15.79-2.61,17.84,0,0,39.11,3.66,103,9.5a92.75,92.75,0,0,0,40.89-5.29c44.32-16.56,57.73-50.67,57.73-50.67l26.82-67.26a1.37,1.37,0,0,1,2.53,0l1.42,3.33,17.75-7.62Z\"></path>\r\n            </g>\r\n          </svg>\r\n          <div className=\"mt-3 rc-page__not-found-button\"><a href=\"/Careers\" style={{color: \"#007bff\"}}>Trang chủ</a></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default NotFound;","import React, { useState, useEffect } from 'react';\r\nimport { Select } from 'antd';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { IoIosSearch } from \"react-icons/io\";\r\nimport { db } from '../../config';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst { Option } = Select;\r\n\r\nconst SearchHome = () => {\r\n    const [locations, setLocations] = useState([]);\r\n    const [desiredAddressCode, setDesiredAddressCode] = useState('');\r\n    const [selectedLocation, setSelectedLocation] = useState('all');\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        const fetchLocations = async () => {\r\n            try {\r\n                const jobsCollection = collection(db, 'jobs');\r\n                const jobsSnapshot = await getDocs(jobsCollection);\r\n                const jobsData = jobsSnapshot.docs.map(doc => doc.data());\r\n                const uniqueLocations = [...new Set(jobsData.flatMap(job => job.locations || []))];\r\n                const parsedLocations = uniqueLocations.map((location, index) => {\r\n                    if (location.includes('(')) {\r\n                        const [mainName, districts] = location.split('(');\r\n                        return {\r\n                            code: index,\r\n                            name: mainName.trim(),\r\n                            districts: districts.slice(0, -1).split(', ')\r\n                        };\r\n                    }\r\n                    return { code: index, name: location.trim() };\r\n                });\r\n                const uniqueParsedLocations = Array.from(\r\n                    new Map(parsedLocations.map(location => [location.name.toLowerCase(), location])).values()\r\n                );\r\n\r\n                setLocations(uniqueParsedLocations);\r\n            } catch (error) {\r\n                console.error(\"Error fetching locations:\", error);\r\n            }\r\n        };\r\n\r\n        fetchLocations();\r\n\r\n        const searchParams = new URLSearchParams(location.search);\r\n        const query = searchParams.get('query') || '';\r\n        const desiredAddressCode = searchParams.get('desiredAddressCode') || 'all';\r\n\r\n        setDesiredAddressCode(query);\r\n        setSelectedLocation(desiredAddressCode);\r\n    }, [location]);\r\n\r\n    const handleSearch = () => {\r\n        const locationParam = selectedLocation === 'all' ? '' : `&desiredAddressCode=${selectedLocation}`;\r\n        window.location.href = `/Careers/tim-kiem-viec-lam?query=${desiredAddressCode}${locationParam}`\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            handleSearch();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-container\">\r\n            <div className=\"search-box\" data-cy=\"search-container\">\r\n                <div className=\"main-job__search-container\">\r\n                    <div className=\"main-job__search-wapper--backgound\">\r\n                        <div className=\"main-job__search-wapper\">\r\n                            <div className=\"main-job__search-input\">\r\n                                <div className=\"text-small\">Bạn đang tìm kiếm</div>\r\n                                <input\r\n                                    placeholder=\"Việc làm, vị trí ứng tuyển...\"\r\n                                    value={desiredAddressCode}\r\n                                    onChange={(e) => setDesiredAddressCode(e.target.value)}\r\n                                    onKeyPress={handleKeyPress}\r\n                                />\r\n                            </div>\r\n                            <div className=\"main-job__search-address\" style={{ display: 'block' }}>\r\n                                <div className=\"mr-2\">\r\n                                    <div className=\"text-small\">Nơi bạn muốn làm việc</div>\r\n                                    <Select\r\n                                        value={selectedLocation}\r\n                                        style={{ width: '100%' }}\r\n                                        onChange={(value) => setSelectedLocation(value)}\r\n                                        showSearch\r\n                                        className=\"custom-selects\"\r\n                                    >\r\n                                        <Option value=\"all\">Tất cả</Option>\r\n                                        {locations.map((location) => (\r\n                                            <Option key={location.code} value={location.name}>{location.name}</Option>\r\n                                        ))}\r\n                                    </Select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"main-job__search-btn-box\">\r\n                                <div className=\"main-job__search-btn\" style={{ background: '#ae8f3d', color: '#fff' }} onClick={handleSearch}>\r\n                                    <span className=\"mr-2\">\r\n                                        <IoIosSearch size={20} />\r\n                                    </span>\r\n                                    <span>Tìm kiếm</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchHome;","import React, { useState, useEffect } from 'react';\r\nimport { Select } from 'antd';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { PiSlidersHorizontalBold } from \"react-icons/pi\";\r\nimport { db } from '../../config';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst { Option } = Select;\r\n\r\nconst SearchMobile = ({handleOpenDrawer}) => {\r\n    const [locations, setLocations] = useState([]);\r\n    const [desiredAddressCode, setDesiredAddressCode] = useState('');\r\n    const [selectedLocation, setSelectedLocation] = useState('all');\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchLocations = async () => {\r\n            try {\r\n                const jobsCollection = collection(db, 'jobs');\r\n                const jobsSnapshot = await getDocs(jobsCollection);\r\n                const jobsData = jobsSnapshot.docs.map(doc => doc.data());\r\n                const uniqueLocations = [...new Set(jobsData.flatMap(job => job.locations || []))];\r\n                const parsedLocations = uniqueLocations.map((location, index) => {\r\n                    if (location.includes('(')) {\r\n                        const [mainName, districts] = location.split('(');\r\n                        return {\r\n                            code: index,\r\n                            name: mainName.trim(),\r\n                            districts: districts.slice(0, -1).split(', ')\r\n                        };\r\n                    }\r\n                    return { code: index, name: location.trim() };\r\n                });\r\n                const uniqueParsedLocations = Array.from(\r\n                    new Map(parsedLocations.map(location => [location.name.toLowerCase(), location])).values()\r\n                );\r\n\r\n                setLocations(uniqueParsedLocations);\r\n            } catch (error) {\r\n                console.error(\"Error fetching locations:\", error);\r\n            }\r\n        };\r\n\r\n        fetchLocations();\r\n\r\n        const searchParams = new URLSearchParams(location.search);\r\n        const query = searchParams.get('query') || '';\r\n        const desiredAddressCode = searchParams.get('desiredAddressCode') || 'all';\r\n\r\n        setDesiredAddressCode(query);\r\n        setSelectedLocation(desiredAddressCode);\r\n    }, [location]);\r\n\r\n    const handleSearch = (locationValue = selectedLocation) => {\r\n        const locationParam = locationValue === 'all' ? '' : `&desiredAddressCode=${locationValue}`;\r\n        navigate(`/tim-kiem-viec-lam?query=${desiredAddressCode}${locationParam}`);\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            handleSearch();\r\n        }\r\n    };\r\n\r\n    const handleLocationChange = (value) => {\r\n        setSelectedLocation(value);\r\n        handleSearch(value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"job-list__search-box-mb\">\r\n                <div className=\"job-list__search-input-mb\">\r\n                    <input\r\n                        placeholder=\"Việc làm, vị trí ứng tuyển...\"\r\n                        value={desiredAddressCode}\r\n                        onChange={(e) => setDesiredAddressCode(e.target.value)}\r\n                        onKeyPress={handleKeyPress}\r\n                    />\r\n                </div>\r\n                <div className=\"job-list__search-select-mb\">\r\n                    <Select\r\n                        value={selectedLocation}\r\n                        style={{ width: '100%' }}\r\n                        onChange={handleLocationChange}\r\n                        showSearch\r\n                        className=\"custom-selectss job-list__search-select-mb-value text-ellipsis\"\r\n                    >\r\n                        <Option value=\"all\">Tất cả</Option>\r\n                        {locations.map((location) => (\r\n                            <Option key={location.code} value={location.name}>{location.name}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </div>\r\n                <div className=\"job-list__search-filter-mb\" onClick={handleOpenDrawer}>\r\n                    <span>\r\n                        <PiSlidersHorizontalBold size={24} />\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchMobile;","import React, { useState, useEffect } from 'react';\r\nimport { collection, query, getDocs } from 'firebase/firestore';\r\nimport { db } from '../config';\r\nimport { Pagination, Skeleton, Modal } from 'antd';\r\nimport { createSlug } from './design/Slug';\r\n\r\nfunction AllJob() {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalJobs, setTotalJobs] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [modalContent, setModalContent] = useState([]);\r\n\r\n    const formatLocation = (location) => {\r\n        return location.replace(/Hồ Chí Minh\\s*\\((.*?)\\)/g, (match, districts) => {\r\n            const formattedDistricts = districts.split(',').map(district => {\r\n                const trimmedDistrict = district.trim();\r\n                return /^\\d+$/.test(trimmedDistrict) ? `Quận ${trimmedDistrict}` : trimmedDistrict;\r\n            }).join(', ');\r\n            return `Hồ Chí Minh (${formattedDistricts})`;\r\n        });\r\n    };\r\n\r\n    const formatLocationModal = (location) => {\r\n        return location.replace(/([^(]+)(\\s*\\(.*?\\))?/g, (match, city, districts) => {\r\n            const formattedCity = `<strong> ${city.trim()} </strong>`;\r\n            if (districts) {\r\n                const formattedDistricts = districts.replace(/\\((.*?)\\)/g, (match, content) => {\r\n                    const formattedContent = content.split(',').map(district => {\r\n                        const trimmedDistrict = district.trim();\r\n                        return /^\\d+$/.test(trimmedDistrict) ? `Quận ${trimmedDistrict}` : trimmedDistrict;\r\n                    }).join(', ');\r\n                    return `(${formattedContent})`;\r\n                });\r\n                return `<div class='job-list__filter-item'>${formattedCity}${formattedDistricts}</div>`;\r\n            }\r\n            return formattedCity;\r\n        });\r\n    };\r\n\r\n    const formatLocationList = (locations) => {\r\n        return locations.map(formatLocationModal).map((location, index) => {\r\n            const prefix = index > 0 ? '' : '';\r\n            return `${prefix}${location}`;\r\n        }).join('');\r\n    };\r\n\r\n    const handleViewMore = (e, locations) => {\r\n        e.stopPropagation();\r\n        const formattedLocations = locations.map(formatLocation);\r\n        setModalContent(formattedLocations);\r\n        setModalVisible(true);\r\n    };\r\n\r\n    const truncateText = (text, maxLength) => {\r\n        if (text.length <= maxLength) return text;\r\n        return text.slice(0, maxLength - 3) + '... ';\r\n    };\r\n\r\n    const pageSize = 10;\r\n\r\n    useEffect(() => {\r\n        const fetchJobs = async () => {\r\n            setLoading(true);\r\n            const jobsCollection = collection(db, 'jobs');\r\n            const jobQuery = query(jobsCollection);\r\n            const querySnapshot = await getDocs(jobQuery);\r\n            const jobList = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n\r\n            const sortedJobs = jobList.sort((a, b) => {\r\n                if (a.workBlock !== b.workBlock) {\r\n                    return a.workBlock === 'office' ? -1 : 1;\r\n                }\r\n                \r\n                const dateA = a.NgayDang.split('/').reverse().join('-');\r\n                const dateB = b.NgayDang.split('/').reverse().join('-');\r\n                return new Date(dateB) - new Date(dateA);\r\n            });\r\n\r\n            setJobs(sortedJobs);\r\n            setTotalJobs(sortedJobs.length);\r\n            setLoading(false);\r\n        };\r\n\r\n        fetchJobs();\r\n    }, []);\r\n\r\n    const getCurrentPageJobs = () => {\r\n        if (loading) {\r\n            return Array(1).fill(null).map((_, index) => (\r\n                <div key={index} className=\"job-list__item\">\r\n                    <Skeleton active paragraph={{ rows: 3 }} />\r\n                </div>\r\n            ));\r\n        }\r\n\r\n        const startIndex = (currentPage - 1) * pageSize;\r\n        const endIndex = startIndex + pageSize;\r\n        return jobs.slice(startIndex, endIndex).map(job => (\r\n            <div key={job.id} className=\"job-list__item\" onClick={() => handleJobClick(job)}>\r\n                <div className={`job-list__item-unit job-list__item-unit--${job.workBlock === 'store' ? 'store' : 'office'}`}>\r\n                    {job.workBlock === 'store' ? 'Khối cửa hàng' : 'Khối văn phòng'}\r\n                </div>\r\n                <div className=\"job-list__item-body\">\r\n                    <div className=\"job-list__item-left\">\r\n                        <div className=\"job-list__item-name\">{job.title}</div>\r\n                        <div className=\"job-list__item-left-info\">\r\n                            <span className=\"mr-2\">\r\n                                <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6.33326 6.99988H7.99992C8.17673 6.99988 8.3463 6.92965 8.47133 6.80462C8.59635 6.6796 8.66659 6.51003 8.66659 6.33322C8.66659 6.1564 8.59635 5.98684 8.47133 5.86181C8.3463 5.73679 8.17673 5.66655 7.99992 5.66655H7.33326V5.33322C7.33326 5.15641 7.26302 4.98684 7.13799 4.86181C7.01297 4.73679 6.8434 4.66655 6.66659 4.66655C6.48978 4.66655 6.32021 4.73679 6.19519 4.86181C6.07016 4.98684 5.99992 5.15641 5.99992 5.33322V5.69988C5.59487 5.78213 5.23483 6.01195 4.98969 6.34473C4.74456 6.6775 4.63182 7.08949 4.67335 7.50072C4.71489 7.91194 4.90775 8.29306 5.21448 8.57009C5.52121 8.84712 5.91994 9.0003 6.33326 8.99988H6.99992C7.08833 8.99988 7.17311 9.035 7.23563 9.09751C7.29814 9.16003 7.33326 9.24481 7.33326 9.33322C7.33326 9.42162 7.29814 9.50641 7.23563 9.56892C7.17311 9.63143 7.08833 9.66655 6.99992 9.66655H5.33326C5.15645 9.66655 4.98688 9.73679 4.86185 9.86181C4.73683 9.98684 4.66659 10.1564 4.66659 10.3332C4.66659 10.51 4.73683 10.6796 4.86185 10.8046C4.98688 10.9296 5.15645 10.9999 5.33326 10.9999H5.99992V11.3332C5.99992 11.51 6.07016 11.6796 6.19519 11.8046C6.32021 11.9296 6.48978 11.9999 6.66659 11.9999C6.8434 11.9999 7.01297 11.9296 7.13799 11.8046C7.26302 11.6796 7.33326 11.51 7.33326 11.3332V10.9666C7.73831 10.8843 8.09835 10.6545 8.34349 10.3217C8.58862 9.98893 8.70136 9.57694 8.65983 9.16572C8.61829 8.75449 8.42543 8.37337 8.1187 8.09634C7.81197 7.81931 7.41324 7.66613 6.99992 7.66655H6.33326C6.24485 7.66655 6.16007 7.63143 6.09755 7.56892C6.03504 7.50641 5.99992 7.42162 5.99992 7.33322C5.99992 7.24481 6.03504 7.16003 6.09755 7.09751C6.16007 7.035 6.24485 6.99988 6.33326 6.99988ZM13.9999 7.99988H11.9999V1.99988C12.0004 1.88241 11.9698 1.7669 11.9113 1.66505C11.8527 1.56319 11.7683 1.47862 11.6666 1.41988C11.5652 1.36137 11.4503 1.33057 11.3333 1.33057C11.2162 1.33057 11.1013 1.36137 10.9999 1.41988L8.99992 2.56655L6.99992 1.41988C6.89858 1.36137 6.78361 1.33057 6.66659 1.33057C6.54957 1.33057 6.4346 1.36137 6.33326 1.41988L4.33326 2.56655L2.33326 1.41988C2.23191 1.36137 2.11695 1.33057 1.99992 1.33057C1.8829 1.33057 1.76794 1.36137 1.66659 1.41988C1.56485 1.47862 1.48044 1.56319 1.42191 1.66505C1.36337 1.7669 1.33279 1.88241 1.33326 1.99988V12.6665C1.33326 13.197 1.54397 13.7057 1.91904 14.0808C2.29412 14.4558 2.80282 14.6665 3.33326 14.6665H12.6666C13.197 14.6665 13.7057 14.4558 14.0808 14.0808C14.4559 13.7057 14.6666 13.197 14.6666 12.6665V8.66655C14.6666 8.48974 14.5964 8.32017 14.4713 8.19515C14.3463 8.07012 14.1767 7.99988 13.9999 7.99988ZM3.33326 13.3332C3.15645 13.3332 2.98688 13.263 2.86185 13.138C2.73683 13.0129 2.66659 12.8434 2.66659 12.6665V3.15322L3.99992 3.91322C4.10282 3.96696 4.21718 3.99502 4.33326 3.99502C4.44934 3.99502 4.5637 3.96696 4.66659 3.91322L6.66659 2.76655L8.66659 3.91322C8.76948 3.96696 8.88384 3.99502 8.99992 3.99502C9.116 3.99502 9.23036 3.96696 9.33326 3.91322L10.6666 3.15322V12.6665C10.6684 12.894 10.709 13.1194 10.7866 13.3332H3.33326ZM13.3333 12.6665C13.3333 12.8434 13.263 13.0129 13.138 13.138C13.013 13.263 12.8434 13.3332 12.6666 13.3332C12.4898 13.3332 12.3202 13.263 12.1952 13.138C12.0702 13.0129 11.9999 12.8434 11.9999 12.6665V9.33322H13.3333V12.6665Z\" fill=\"#30C894\"></path></svg>\r\n                            </span>\r\n                            <span>{job.salary}</span>\r\n                        </div>\r\n                        <div className=\"job-list__item-left-info\">\r\n                            <span className=\"mr-2\">\r\n                                <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M12.0001 2.98644C10.9392 1.92558 9.50041 1.32959 8.00012 1.32959C6.49982 1.32959 5.06098 1.92558 4.00012 2.98644C2.93925 4.04731 2.34326 5.48615 2.34326 6.98644C2.34326 8.48673 2.93925 9.92558 4.00012 10.9864L7.51345 14.5064C7.57542 14.5689 7.64916 14.6185 7.7304 14.6524C7.81164 14.6862 7.89877 14.7036 7.98678 14.7036C8.07479 14.7036 8.16193 14.6862 8.24317 14.6524C8.32441 14.6185 8.39814 14.5689 8.46011 14.5064L12.0001 10.9531C13.0565 9.89666 13.65 8.46381 13.65 6.96978C13.65 5.47574 13.0565 4.0429 12.0001 2.98644ZM11.0468 9.99978L8.00012 13.0598L4.95345 9.99978C4.35155 9.39732 3.94177 8.62994 3.77591 7.79464C3.61006 6.95933 3.69557 6.09361 4.02165 5.3069C4.34773 4.52019 4.89973 3.84781 5.60787 3.37476C6.31601 2.90171 7.148512.64923 8.00012 2.64923C8.85173 2.64923 9.68422 2.90171 10.3924 3.37476C11.1005 3.84781 11.6525 4.52019 11.9786 5.3069C12.3047 6.09361 12.3902 6.95933 12.2243 7.79464C12.0585 8.62994 11.6487 9.39732 11.0468 9.99978ZM6.00012 4.93978C5.46193 5.47963 5.15971 6.21082 5.15971 6.97311C5.15971 7.7354 5.46193 8.4666 6.00012 9.00644C6.39996 9.40697 6.90917 9.6805 7.46388 9.79271C8.01859 9.90493 8.59408 9.85083 9.11816 9.63721C9.64224 9.42359 10.0916 9.05996 10.4098 8.59194C10.728 8.12392 10.9009 7.57236 10.9068 7.00644C10.9098 6.62858 10.837 6.25395 10.6927 5.9047C10.5484 5.55546 10.3356 5.23868 10.0668 4.97311C9.80256 4.70283 9.4875 4.48747 9.13973 4.33942C8.79196 4.19137 8.41834 4.11356 8.04038 4.11046C7.66242 4.10736 7.28758 4.17904 6.93743 4.32137C6.58728 4.4637 6.26873 4.67386 6.00012 4.93978Z\" fill=\"#333333\"></path>\r\n                                </svg>\r\n                            </span>\r\n                            <span>\r\n                                {(() => {\r\n                                    const fullText = job.locations.join(', ');\r\n                                    const truncatedText = truncateText(fullText, 120);\r\n                                    const boldBeforeParentheses = (text) => {\r\n                                        return text.replace(/([^,]+?)(\\s*\\(.*?\\))?(?:,|$)/g, (match, beforeParen, afterParen) => {\r\n                                            return `<strong>${beforeParen}</strong>${afterParen || ''}${match.endsWith(',') ? ',' : ''}`;\r\n                                        });\r\n                                    };\r\n\r\n                                    return (\r\n                                        <>\r\n                                            <span dangerouslySetInnerHTML={{ __html: boldBeforeParentheses(formatLocation(truncatedText)) }} />\r\n                                            {fullText.length > 123 && (\r\n                                                <span\r\n                                                    className=\"address-list_more-btn\"\r\n                                                    onClick={(e) => handleViewMore(e, job.locations)}\r\n                                                >\r\n                                                    Xem thêm\r\n                                                </span>\r\n                                            )}\r\n                                        </>\r\n                                    );\r\n                                })()}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"job-list__item-mb-deadline\">\r\n                            <span className=\"mr-2\">\r\n                                <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M12.6668 2.66667H11.3335V2C11.3335 1.82319 11.2633 1.65362 11.1382 1.5286C11.0132 1.40357 10.8436 1.33334 10.6668 1.33334C10.49 1.33334 10.3204 1.40357 10.1954 1.5286C10.0704 1.65362 10.0002 1.82319 10.0002 2V2.66667H6.00016V2C6.00016 1.82319 5.92992 1.65362 5.8049 1.5286C5.67988 1.40357 5.51031 1.33334 5.3335 1.33334C5.15669 1.33334 4.98712 1.40357 4.86209 1.5286C4.73707 1.65362 4.66683 1.82319 4.66683 2V2.66667H3.3335C2.80306 2.66667 2.29436 2.87738 1.91928 3.25246C1.54421 3.62753 1.3335 4.13624 1.3335 4.66667V12.6667C1.3335 13.1971 1.54421 13.7058 1.91928 14.0809C2.29436 14.456 2.80306 14.6667 3.3335 14.6667H12.6668C13.1973 14.6667 13.706 14.456 14.081 14.0809C14.4561 13.7058 14.6668 13.1971 14.6668 12.6667V4.66667C14.6668 4.13624 14.4561 3.62753 14.081 3.25246C13.706 2.87738 13.1973 2.66667 12.6668 2.66667ZM13.3335 12.6667C13.3335 12.8435 13.2633 13.0131 13.1382 13.1381C13.0132 13.2631 12.8436 13.3333 12.6668 13.3333H3.3335C3.15669 13.3333 2.98712 13.2631 2.86209 13.1381C2.73707 13.0131 2.66683 12.8435 2.66683 12.6667V8H13.3335V12.6667ZM13.3335 6.66667H2.66683V4.66667C2.66683 4.48986 2.73707 4.32029 2.86209 4.19526C2.98712 4.07024 3.15669 4 3.3335 4H4.66683V4.66667C4.66683 4.84348 4.73707 5.01305 4.86209 5.13807C4.98712 5.2631 5.15669 5.33334 5.3335 5.33334C5.51031 5.33334 5.67988 5.2631 5.8049 5.13807C5.92992 5.01305 6.00016 4.84348 6.00016 4.66667V4H10.0002V4.66667C10.0002 4.84348 10.0704 5.01305 10.1954 5.13807C10.3204 5.2631 10.49 5.33334 10.6668 5.33334C10.8436 5.33334 11.0132 5.2631 11.1382 5.13807C11.2633 5.01305 11.3335 4.84348 11.3335 4.66667V4H12.6668C12.8436 4 13.0132 4.07024 13.1382 4.19526C13.2633 4.32029 13.3335 4.48986 13.3335 4.66667V6.66667Z\" fill=\"#333333\"></path>\r\n                                </svg>\r\n                            </span>\r\n                            <span>Hạn nộp {job.deadline}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"job-list__item-right\">\r\n                        <div className=\"job-list__item-deadline\">Hạn nộp {job.deadline}</div>\r\n                        <div\r\n                            className=\"job-list__item-btn-apply\"\r\n                            onClick={(e) => handleApplyClick(e, job)}\r\n                        >\r\n                            Ứng tuyển ngay\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    const handlePageChange = (page) => {\r\n        setCurrentPage(page);\r\n    };\r\n\r\n    const handleJobClick = (job) => {\r\n        const slugTitle = createSlug(job.title);\r\n        const baseUrl = job.workBlock === 'store'\r\n            ? `/Careers/viec-lam-cua-hang/${job.workBlock}/${slugTitle}`\r\n            : `/Careers/viec-lam-van-phong/${job.workBlock}/${slugTitle}`;\r\n        window.location.href = `${baseUrl}`;\r\n    };\r\n\r\n    const handleApplyClick = (e, job) => {\r\n        e.stopPropagation();\r\n        const sluggedJobTitle = createSlug(job.title);\r\n        const workBlock = job.workBlock === 'store' ? 'cua-hang' : 'van-phong';\r\n        window.location.href = `/Careers/viec-lam-${workBlock}/${job.workBlock}/ung-tuyen-viec-lam/${sluggedJobTitle}`;\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            {getCurrentPageJobs()}\r\n            <div className=\"job-list__body-paging\">\r\n                <Pagination\r\n                    current={currentPage}\r\n                    total={totalJobs}\r\n                    pageSize={pageSize}\r\n                    onChange={handlePageChange}\r\n                    showSizeChanger={false}\r\n                />\r\n            </div>\r\n            <Modal\r\n                title=\"Danh sách địa điểm làm việc\"\r\n                visible={modalVisible}\r\n                onOk={() => setModalVisible(false)}\r\n                onCancel={() => setModalVisible(false)}\r\n                footer={null}\r\n            >\r\n                <React.Fragment>\r\n                    <div\r\n                        dangerouslySetInnerHTML={{\r\n                            __html: formatLocationList(modalContent)\r\n                        }}\r\n                    />\r\n                </React.Fragment>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllJob;","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { collection, query, getDocs } from 'firebase/firestore';\r\nimport { db } from '../config';\r\nimport { Pagination, Modal, Drawer } from 'antd';\r\nimport SearchHome from './SearchHome/SearchHome';\r\nimport Loading from './Loading';\r\nimport AllJob from './Alljob';\r\nimport { createSlug } from './design/Slug';\r\nimport SearchMobile from './SearchHome/SearchMobile';\r\nimport NotFound from './NotFound';\r\n\r\nconst Timkiemvieclam = () => {\r\n    const location = useLocation();\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const searchQuery = queryParams.get('query')?.toLowerCase();\r\n    const desiredAddressCode = queryParams.get('desiredAddressCode');\r\n    const [jobs, setJobs] = useState([]);\r\n    const [filteredJobs, setFilteredJobs] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [activeFilter, setActiveFilter] = useState('all');\r\n    const [descriptions, setDescriptions] = useState({ store: [], office: [] });\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [modalContent, setModalContent] = useState([]);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [drawerVisible, setDrawerVisible] = useState(false);\r\n    const pageSize = 10;\r\n\r\n    useEffect(() => {\r\n        const fetchJobs = async () => {\r\n            try {\r\n                const jobsCollection = collection(db, 'jobs');\r\n                const q = query(jobsCollection);\r\n                const querySnapshot = await getDocs(q);\r\n    \r\n                const fetchedJobs = [];\r\n                const storeDescriptions = new Set();\r\n                const officeDescriptions = new Set();\r\n    \r\n                querySnapshot.forEach((doc) => {\r\n                    const jobData = doc.data();\r\n    \r\n                    const isMatchingLocation = Array.isArray(jobData.locations)\r\n                        ? jobData.locations.some((loc) => loc.toLowerCase().includes(desiredAddressCode?.toLowerCase() || ''))\r\n                        : false;\r\n    \r\n                    if ((!searchQuery || jobData.title.toLowerCase().includes(searchQuery)) &&\r\n                        (!desiredAddressCode || desiredAddressCode === 'all' || isMatchingLocation)) {\r\n                        fetchedJobs.push({ id: doc.id, ...jobData });\r\n                    }\r\n    \r\n                    if (jobData.workBlock === 'store') {\r\n                        storeDescriptions.add(jobData.department);\r\n                    } else {\r\n                        officeDescriptions.add(jobData.department);\r\n                    }\r\n                });\r\n    \r\n                setJobs(fetchedJobs);\r\n                setFilteredJobs(fetchedJobs);\r\n                setDescriptions({\r\n                    store: Array.from(storeDescriptions),\r\n                    office: Array.from(officeDescriptions)\r\n                });\r\n                setLoading(false);\r\n            } catch (err) {\r\n                setError('Không thể tải dữ liệu công việc.');\r\n                setLoading(false);\r\n            }\r\n        };\r\n    \r\n        fetchJobs();\r\n    }, [searchQuery, desiredAddressCode]);\r\n\r\n    const formatLocation = (location) => {\r\n        return location.replace(/Hồ Chí Minh\\s*\\((.*?)\\)/g, (match, districts) => {\r\n            const formattedDistricts = districts.split(',').map(district => {\r\n                const trimmedDistrict = district.trim();\r\n                return /^\\d+$/.test(trimmedDistrict) ? `Quận ${trimmedDistrict}` : trimmedDistrict;\r\n            }).join(', ');\r\n            return `Hồ Chí Minh (${formattedDistricts})`;\r\n        });\r\n    };\r\n\r\n    const formatLocationModal = (location) => {\r\n        return location.replace(/([^(]+)(\\s*\\(.*?\\))?/g, (match, city, districts) => {\r\n            const formattedCity = `<strong> ${city.trim()} </strong>`;\r\n            if (districts) {\r\n                const formattedDistricts = districts.replace(/\\((.*?)\\)/g, (match, content) => {\r\n                    const formattedContent = content.split(',').map(district => {\r\n                        const trimmedDistrict = district.trim();\r\n                        return /^\\d+$/.test(trimmedDistrict) ? `Quận ${trimmedDistrict}` : trimmedDistrict;\r\n                    }).join(', ');\r\n                    return `(${formattedContent})`;\r\n                });\r\n                return `<div class='job-list__filter-item'>${formattedCity}${formattedDistricts}</div>`;\r\n            }\r\n            return formattedCity;\r\n        });\r\n    };\r\n\r\n    const formatLocationList = (locations) => {\r\n        return locations.map(formatLocationModal).map((location, index) => {\r\n            const prefix = index > 0 ? '' : '';\r\n            return `${prefix}${location}`;\r\n        }).join('');\r\n    };\r\n\r\n    const handleViewMore = (e, locations) => {\r\n        e.stopPropagation();\r\n        const formattedLocations = locations.map(formatLocation);\r\n        setModalContent(formattedLocations);\r\n        setModalVisible(true);\r\n    };\r\n\r\n    const handleFilterClick = (filter, block) => {\r\n        setActiveFilter(filter);\r\n        if (filter === 'all') {\r\n            setFilteredJobs(jobs);\r\n        } else if (filter === 'store' || filter === 'office') {\r\n            setFilteredJobs(jobs.filter(job => job.workBlock === filter));\r\n        } else {\r\n            setFilteredJobs(jobs.filter(job =>\r\n                job.workBlock === block && job.department === filter\r\n            ));\r\n        }\r\n        setCurrentPage(1);\r\n        setDrawerVisible(false);\r\n    };\r\n\r\n    const truncateText = (text, maxLength) => {\r\n        if (text.length <= maxLength) return text;\r\n        return text.slice(0, maxLength - 3) + '... ';\r\n    };\r\n\r\n    const getSearchTitle = () => {\r\n        if (searchQuery && desiredAddressCode && desiredAddressCode !== 'all') {\r\n            return `\"${searchQuery}\" tại \"${desiredAddressCode}\"`;\r\n        } else if (searchQuery) {\r\n            return `\"${searchQuery}\"`;\r\n        } else if (desiredAddressCode === 'all' || !desiredAddressCode) {\r\n            return 'ở tất cả các vị trí trên toàn quốc';\r\n        } else {\r\n            return `tại \"${desiredAddressCode}\"`;\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (page) => {\r\n        setCurrentPage(page);\r\n    };\r\n\r\n    const handleJobClick = (job) => {\r\n        const slugTitle = createSlug(job.title);\r\n        const baseUrl = job.workBlock === 'store'\r\n            ? `/Careers/viec-lam-cua-hang/${job.workBlock}/${slugTitle}`\r\n            : `/Careers/viec-lam-van-phong/${job.workBlock}/${slugTitle}`;\r\n        window.location.href = `${baseUrl}`;\r\n    };\r\n\r\n    const handleApplyClick = (e, job) => {\r\n        e.stopPropagation();\r\n        const sluggedJobTitle = createSlug(job.title);\r\n        const workBlock = job.workBlock === 'store' ? 'cua-hang' : 'van-phong';\r\n        window.location.href = `/Careers/viec-lam-${workBlock}/${job.workBlock}/ung-tuyen-viec-lam/${sluggedJobTitle}`;\r\n    };\r\n\r\n    const paginatedJobs = filteredJobs.slice(\r\n        (currentPage - 1) * pageSize,\r\n        currentPage * pageSize\r\n    );\r\n\r\n    const handleOpenDrawer = () => {\r\n        setDrawerVisible(true);\r\n    };\r\n\r\n    const handleCloseDrawer = () => {\r\n        setDrawerVisible(false);\r\n    };\r\n\r\n\r\n    if (loading) {\r\n        return <Loading />;\r\n    }\r\n\r\n    if (error) {\r\n        return <NotFound />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"job-list__search\">\r\n                <div className='niso-hidden'>\r\n                    <SearchHome />\r\n                </div>\r\n                <SearchMobile handleOpenDrawer={handleOpenDrawer} />\r\n            </div>\r\n            <div className=\"job-list__wapper\">\r\n                <div className=\"job-list__filter\">\r\n                    <div className=\"job-list__filter-store\">\r\n                        <div className=\"job-list__filter-title\">\r\n                            <span className=\"mr-3\" style={{ height: '32px' }}>\r\n                                <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M18.2503 6.33332L16.5837 2.16666C16.5003 1.83332 16.167 1.66666 15.8337 1.66666H4.16699C3.83366 1.66666 3.50033 1.83332 3.41699 2.16666L1.75033 6.33332C1.66699 6.41666 1.66699 6.58332 1.66699 6.66666C1.66699 7.83332 2.33366 8.91666 3.33366 9.49999V17.5C3.33366 18 3.66699 18.3333 4.16699 18.3333H15.8337C16.3337 18.3333 16.667 18 16.667 17.5V9.49999C17.667 8.91666 18.3337 7.83332 18.3337 6.66666C18.3337 6.58332 18.3337 6.41666 18.2503 6.33332ZM15.0003 16.6667H12.5003V12.5C12.5003 12 12.167 11.6667 11.667 11.6667H8.33366C7.83366 11.6667 7.50033 12 7.50033 12.5V16.6667H5.00033V9.99999C6.00033 9.99999 6.83366 9.58332 7.50033 8.83332C8.66699 10.25 10.7503 10.4167 12.167 9.16666C12.3337 9.08332 12.417 8.91666 12.5003 8.83332C13.167 9.58332 14.0003 9.99999 15.0003 9.99999V16.6667Z\" fill=\"#757575\"></path></svg>\r\n                            </span><span>Khối cửa hàng</span>\r\n                        </div>\r\n                        <div className=\"job-list__filter-list\">\r\n                            <div\r\n                                className={`job-list__filter-item ${activeFilter === 'store' ? 'active' : ''}`}\r\n                                onClick={() => handleFilterClick('store', 'store')}\r\n                            >\r\n                                Tất cả\r\n                            </div>\r\n                            {descriptions.store.map((desc, index) => (\r\n                                <div\r\n                                    key={index}\r\n                                    className={`job-list__filter-item ${activeFilter === desc ? 'active' : ''}`}\r\n                                    onClick={() => handleFilterClick(desc, 'store')}\r\n                                >\r\n                                    {desc}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"job-list__filter-store mt-4\">\r\n                        <div className=\"job-list__filter-title\">\r\n                            <span className=\"mr-3\" style={{ height: '32px' }}>\r\n                                <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 21 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M18.0003 16.6667H17.167V2.49999C17.167 1.99999 16.8337 1.66666 16.3337 1.66666H4.66699C4.16699 1.66666 3.83366 1.99999 3.83366 2.49999V16.6667H3.00033C2.50033 16.6667 2.16699 17 2.16699 17.5C2.16699 18 2.50033 18.3333 3.00033 18.3333H18.0003C18.5003 18.3333 18.8337 18 18.8337 17.5C18.8337 17 18.5003 16.6667 18.0003 16.6667ZM8.00033 4.99999H8.83366C9.33366 4.99999 9.66699 5.33332 9.66699 5.83332C9.66699 6.33332 9.33366 6.66666 8.83366 6.66666H8.00033C7.50033 6.66666 7.16699 6.33332 7.16699 5.83332C7.16699 5.33332 7.50033 4.99999 8.00033 4.99999ZM7.16699 9.16666C7.16699 8.66666 7.50033 8.33332 8.00033 8.33332H8.83366C9.33366 8.33332 9.66699 8.66666 9.66699 9.16666C9.66699 9.66666 9.33366 9.99999 8.83366 9.99999H8.00033C7.50033 9.99999 7.16699 9.66666 7.16699 9.16666ZM13.0003 16.6667H8.00033V12.5C8.00033 12 8.33366 11.6667 8.83366 11.6667H12.167C12.667 11.6667 13.0003 12 13.0003 12.5V16.6667ZM13.0003 9.99999H12.167C11.667 9.99999 11.3337 9.66666 11.3337 9.16666C11.3337 8.66666 11.667 8.33332 12.167 8.33332H13.0003C13.5003 8.33332 13.8337 8.66666 13.8337 9.16666C13.8337 9.66666 13.5003 9.99999 13.0003 9.99999ZM13.0003 6.66666H12.167C11.667 6.66666 11.3337 6.33332 11.3337 5.83332C11.3337 5.33332 11.667 4.99999 12.167 4.99999H13.0003C13.5003 4.99999 13.8337 5.33332 13.8337 5.83332C13.8337 6.33332 13.5003 6.66666 13.0003 6.66666Z\" fill=\"#757575\"></path></svg>\r\n                            </span><span>Khối văn phòng</span>\r\n                        </div>\r\n                        <div className=\"job-list__filter-list\">\r\n                            <div\r\n                                className={`job-list__filter-item ${activeFilter === 'office' ? 'active' : ''}`}\r\n                                onClick={() => handleFilterClick('office', 'office')}\r\n                            >\r\n                                Tất cả\r\n                            </div>\r\n                            {descriptions.office.map((desc, index) => (\r\n                                <div\r\n                                    key={index}\r\n                                    className={`job-list__filter-item ${activeFilter === desc ? 'active' : ''}`}\r\n                                    onClick={() => handleFilterClick(desc, 'office')}\r\n                                >\r\n                                    {desc}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"job-list__body\">\r\n                    {filteredJobs.length > 0 ? (\r\n                        <>\r\n                            <div className=\"job-list__body-info\">\r\n                                <div className=\"job-list__body-count\">{filteredJobs.length} việc làm </div>\r\n                                <div className=\"job-list__body-title\">{getSearchTitle()}</div>\r\n                            </div>\r\n                            <div className=\"job-list__body-main\">\r\n                                {paginatedJobs.map((job) => (\r\n                                    <div className=\"job-list__item\" key={job.id} onClick={() => handleJobClick(job)}>\r\n                                        <div className=\"job-list__item-unit job-list__item-unit--office\">\r\n                                            {job.workBlock === 'store' ? 'Khối cửa hàng' : 'Khối văn phòng'}\r\n                                        </div>\r\n                                        <div className=\"job-list__item-body\">\r\n                                            <div className=\"job-list__item-left\">\r\n                                                <div className=\"job-list__item-name\">{job.title}</div>\r\n                                                <div className=\"job-list__item-left-info\">\r\n                                                    <span className=\"mr-2\">\r\n                                                        <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6.33326 6.99988H7.99992C8.17673 6.99988 8.3463 6.92965 8.47133 6.80462C8.59635 6.6796 8.66659 6.51003 8.66659 6.33322C8.66659 6.1564 8.59635 5.98684 8.47133 5.86181C8.3463 5.73679 8.17673 5.66655 7.99992 5.66655H7.33326V5.33322C7.33326 5.15641 7.26302 4.98684 7.13799 4.86181C7.01297 4.73679 6.8434 4.66655 6.66659 4.66655C6.48978 4.66655 6.32021 4.73679 6.19519 4.86181C6.07016 4.98684 5.99992 5.15641 5.99992 5.33322V5.69988C5.59487 5.78213 5.23483 6.01195 4.98969 6.34473C4.74456 6.6775 4.63182 7.08949 4.67335 7.50072C4.71489 7.91194 4.90775 8.29306 5.21448 8.57009C5.52121 8.84712 5.91994 9.0003 6.33326 8.99988H6.99992C7.08833 8.99988 7.17311 9.035 7.23563 9.09751C7.29814 9.16003 7.33326 9.24481 7.33326 9.33322C7.33326 9.42162 7.29814 9.50641 7.23563 9.56892C7.17311 9.63143 7.08833 9.66655 6.99992 9.66655H5.33326C5.15645 9.66655 4.98688 9.73679 4.86185 9.86181C4.73683 9.98684 4.66659 10.1564 4.66659 10.3332C4.66659 10.51 4.73683 10.6796 4.86185 10.8046C4.98688 10.9296 5.15645 10.9999 5.33326 10.9999H5.99992V11.3332C5.99992 11.51 6.07016 11.6796 6.19519 11.8046C6.32021 11.9296 6.48978 11.9999 6.66659 11.9999C6.8434 11.9999 7.01297 11.9296 7.13799 11.8046C7.26302 11.6796 7.33326 11.51 7.33326 11.3332V10.9666C7.73831 10.8843 8.09835 10.6545 8.34349 10.3217C8.58862 9.98893 8.70136 9.57694 8.65983 9.16572C8.61829 8.75449 8.42543 8.37337 8.1187 8.09634C7.81197 7.81931 7.41324 7.66613 6.99992 7.66655H6.33326C6.24485 7.66655 6.16007 7.63143 6.09755 7.56892C6.03504 7.50641 5.99992 7.42162 5.99992 7.33322C5.99992 7.24481 6.03504 7.16003 6.09755 7.09751C6.16007 7.035 6.24485 6.99988 6.33326 6.99988ZM13.9999 7.99988H11.9999V1.99988C12.0004 1.88241 11.9698 1.7669 11.9113 1.66505C11.8527 1.56319 11.7683 1.47862 11.6666 1.41988C11.5652 1.36137 11.4503 1.33057 11.3333 1.33057C11.2162 1.33057 11.1013 1.36137 10.9999 1.41988L8.99992 2.56655L6.99992 1.41988C6.89858 1.36137 6.78361 1.33057 6.66659 1.33057C6.54957 1.33057 6.4346 1.36137 6.33326 1.41988L4.33326 2.56655L2.33326 1.41988C2.23191 1.36137 2.11695 1.33057 1.99992 1.33057C1.8829 1.33057 1.76794 1.36137 1.66659 1.41988C1.56485 1.47862 1.48044 1.56319 1.42191 1.66505C1.36337 1.7669 1.33279 1.88241 1.33326 1.99988V12.6665C1.33326 13.197 1.54397 13.7057 1.91904 14.0808C2.29412 14.4558 2.80282 14.6665 3.33326 14.6665H12.6666C13.197 14.6665 13.7057 14.4558 14.0808 14.0808C14.4559 13.7057 14.6666 13.197 14.6666 12.6665V8.66655C14.6666 8.48974 14.5964 8.32017 14.4713 8.19515C14.3463 8.07012 14.1767 7.99988 13.9999 7.99988ZM3.33326 13.3332C3.15645 13.3332 2.98688 13.263 2.86185 13.138C2.73683 13.0129 2.66659 12.8434 2.66659 12.6665V3.15322L3.99992 3.91322C4.10282 3.96696 4.21718 3.99502 4.33326 3.99502C4.44934 3.99502 4.5637 3.96696 4.66659 3.91322L6.66659 2.76655L8.66659 3.91322C8.76948 3.96696 8.88384 3.99502 8.99992 3.99502C9.116 3.99502 9.23036 3.96696 9.33326 3.91322L10.6666 3.15322V12.6665C10.6684 12.894 10.709 13.1194 10.7866 13.3332H3.33326ZM13.3333 12.6665C13.3333 12.8434 13.263 13.0129 13.138 13.138C13.013 13.263 12.8434 13.3332 12.6666 13.3332C12.4898 13.3332 12.3202 13.263 12.1952 13.138C12.0702 13.0129 11.9999 12.8434 11.9999 12.6665V9.33322H13.3333V12.6665Z\" fill=\"#30C894\"></path></svg>\r\n                                                    </span>\r\n                                                    <span>{job.salary}</span>\r\n                                                </div>\r\n                                                <div className=\"job-list__item-left-info\">\r\n                                                    <span className=\"mr-2\">\r\n                                                        <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                            <path d=\"M12.0001 2.98644C10.9392 1.92558 9.50041 1.32959 8.00012 1.32959C6.49982 1.32959 5.06098 1.92558 4.00012 2.98644C2.93925 4.04731 2.34326 5.48615 2.34326 6.98644C2.34326 8.48673 2.93925 9.92558 4.00012 10.9864L7.51345 14.5064C7.57542 14.5689 7.64916 14.6185 7.7304 14.6524C7.81164 14.6862 7.89877 14.7036 7.98678 14.7036C8.07479 14.7036 8.16193 14.6862 8.24317 14.6524C8.32441 14.6185 8.39814 14.5689 8.46011 14.5064L12.0001 10.9531C13.0565 9.89666 13.65 8.46381 13.65 6.96978C13.65 5.47574 13.0565 4.0429 12.0001 2.98644ZM11.0468 9.99978L8.00012 13.0598L4.95345 9.99978C4.35155 9.39732 3.94177 8.62994 3.77591 7.79464C3.61006 6.95933 3.69557 6.09361 4.02165 5.3069C4.34773 4.52019 4.89973 3.84781 5.60787 3.37476C6.31601 2.90171 7.148512.64923 8.00012 2.64923C8.85173 2.64923 9.68422 2.90171 10.3924 3.37476C11.1005 3.84781 11.6525 4.52019 11.9786 5.3069C12.3047 6.09361 12.3902 6.95933 12.2243 7.79464C12.0585 8.62994 11.6487 9.39732 11.0468 9.99978ZM6.00012 4.93978C5.46193 5.47963 5.15971 6.21082 5.15971 6.97311C5.15971 7.7354 5.46193 8.4666 6.00012 9.00644C6.39996 9.40697 6.90917 9.6805 7.46388 9.79271C8.01859 9.90493 8.59408 9.85083 9.11816 9.63721C9.64224 9.42359 10.0916 9.05996 10.4098 8.59194C10.728 8.12392 10.9009 7.57236 10.9068 7.00644C10.9098 6.62858 10.837 6.25395 10.6927 5.9047C10.5484 5.55546 10.3356 5.23868 10.0668 4.97311C9.80256 4.70283 9.4875 4.48747 9.13973 4.33942C8.79196 4.19137 8.41834 4.11356 8.04038 4.11046C7.66242 4.10736 7.28758 4.17904 6.93743 4.32137C6.58728 4.4637 6.26873 4.67386 6.00012 4.93978Z\" fill=\"#333333\"></path>\r\n                                                        </svg>\r\n                                                    </span>\r\n                                                    <span>\r\n                                                        {(() => {\r\n                                                            const fullText = job.locations.join(', ');\r\n                                                            const truncatedText = truncateText(fullText, 120);\r\n                                                            const boldBeforeParentheses = (text) => {\r\n                                                                return text.replace(/([^,]+?)(\\s*\\(.*?\\))?(?:,|$)/g, (match, beforeParen, afterParen) => {\r\n                                                                    return `<strong>${beforeParen}</strong>${afterParen || ''}${match.endsWith(',') ? ',' : ''}`;\r\n                                                                });\r\n                                                            };\r\n\r\n                                                            return (\r\n                                                                <>\r\n                                                                    <span dangerouslySetInnerHTML={{ __html: boldBeforeParentheses(formatLocation(truncatedText)) }} />\r\n                                                                    {fullText.length > 123 && (\r\n                                                                        <span\r\n                                                                            className=\"address-list_more-btn\"\r\n                                                                            onClick={(e) => handleViewMore(e, job.locations)}\r\n                                                                        >\r\n                                                                            Xem thêm\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </>\r\n                                                            );\r\n                                                        })()}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div className=\"job-list__item-mb-deadline\">\r\n                                                    <span className=\"mr-2\">\r\n                                                        <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                            <path d=\"M12.6668 2.66667H11.3335V2C11.3335 1.82319 11.2633 1.65362 11.1382 1.5286C11.0132 1.40357 10.8436 1.33334 10.6668 1.33334C10.49 1.33334 10.3204 1.40357 10.1954 1.5286C10.0704 1.65362 10.0002 1.82319 10.0002 2V2.66667H6.00016V2C6.00016 1.82319 5.92992 1.65362 5.8049 1.5286C5.67988 1.40357 5.51031 1.33334 5.3335 1.33334C5.15669 1.33334 4.98712 1.40357 4.86209 1.5286C4.73707 1.65362 4.66683 1.82319 4.66683 2V2.66667H3.3335C2.80306 2.66667 2.29436 2.87738 1.91928 3.25246C1.54421 3.62753 1.3335 4.13624 1.3335 4.66667V12.6667C1.3335 13.1971 1.54421 13.7058 1.91928 14.0809C2.29436 14.456 2.80306 14.6667 3.3335 14.6667H12.6668C13.1973 14.6667 13.706 14.456 14.081 14.0809C14.4561 13.7058 14.6668 13.1971 14.6668 12.6667V4.66667C14.6668 4.13624 14.4561 3.62753 14.081 3.25246C13.706 2.87738 13.1973 2.66667 12.6668 2.66667ZM13.3335 12.6667C13.3335 12.8435 13.2633 13.0131 13.1382 13.1381C13.0132 13.2631 12.8436 13.3333 12.6668 13.3333H3.3335C3.15669 13.3333 2.98712 13.2631 2.86209 13.1381C2.73707 13.0131 2.66683 12.8435 2.66683 12.6667V8H13.3335V12.6667ZM13.3335 6.66667H2.66683V4.66667C2.66683 4.48986 2.73707 4.32029 2.86209 4.19526C2.98712 4.07024 3.15669 4 3.3335 4H4.66683V4.66667C4.66683 4.84348 4.73707 5.01305 4.86209 5.13807C4.98712 5.2631 5.15669 5.33334 5.3335 5.33334C5.51031 5.33334 5.67988 5.2631 5.8049 5.13807C5.92992 5.01305 6.00016 4.84348 6.00016 4.66667V4H10.0002V4.66667C10.0002 4.84348 10.0704 5.01305 10.1954 5.13807C10.3204 5.2631 10.49 5.33334 10.6668 5.33334C10.8436 5.33334 11.0132 5.2631 11.1382 5.13807C11.2633 5.01305 11.3335 4.84348 11.3335 4.66667V4H12.6668C12.8436 4 13.0132 4.07024 13.1382 4.19526C13.2633 4.32029 13.3335 4.48986 13.3335 4.66667V6.66667Z\" fill=\"#333333\"></path>\r\n                                                        </svg>\r\n                                                    </span>\r\n                                                    <span>Hạn nộp {job.deadline}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"job-list__item-right\">\r\n                                                <div className=\"job-list__item-deadline\">Hạn nộp {job.deadline}</div>\r\n                                                <div className=\"job-list__item-btn-apply\" onClick={(e) => handleApplyClick(e, job)}>Ứng tuyển ngay</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                                <div className=\"job-list__body-paging\">\r\n                                    <Pagination\r\n                                        current={currentPage}\r\n                                        total={filteredJobs.length}\r\n                                        pageSize={pageSize}\r\n                                        onChange={handlePageChange}\r\n                                        showSizeChanger={false}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"job-list__body-info\">\r\n                                <div className=\"job-list__not-found-title\">Không tìm thấy việc làm nào theo tiêu chí bạn tìm kiếm</div>\r\n                                <div className=\"job-list__not-found-sub\">Thử điều chỉnh tiêu chí tìm kiếm của bạn bằng cách thay đổi địa điểm hoặc vị trí ứng tuyển</div>\r\n                            </div>\r\n                            <div className=\"job-list__body-main job-list__body-main--not-found\">\r\n                                <div className=\"job-list__not-found-title job-list__not-found-title--padding\">Một số việc làm khác có thể bạn quan tâm</div>\r\n                                <AllJob />\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                title=\"Danh sách địa điểm làm việc\"\r\n                visible={modalVisible}\r\n                onOk={() => setModalVisible(false)}\r\n                onCancel={() => setModalVisible(false)}\r\n                footer={null}\r\n            >\r\n                <React.Fragment>\r\n                    <div\r\n                        dangerouslySetInnerHTML={{\r\n                            __html: formatLocationList(modalContent)\r\n                        }}\r\n                    />\r\n                </React.Fragment>\r\n            </Modal>\r\n            <Drawer\r\n                placement=\"bottom\"\r\n                onClose={handleCloseDrawer}\r\n                visible={drawerVisible}\r\n                height={631}\r\n                style={{ borderRadius: '24px 24px 0 0' }}\r\n                closable={false}\r\n            >\r\n                <div className=\"job-list__filter-title\">\r\n                    <span>Khối cửa hàng</span>\r\n                </div>\r\n                <div className=\"job-list__filter-list\">\r\n                    <div\r\n                        className={`job-list__filter-item ${activeFilter === 'store' ? 'active' : ''}`}\r\n                        onClick={() => handleFilterClick('store', 'store')}\r\n                    >\r\n                        Tất cả\r\n                    </div>\r\n                    {descriptions.store.map((desc, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className={`job-list__filter-item ${activeFilter === desc ? 'active' : ''}`}\r\n                            onClick={() => handleFilterClick(desc, 'store')}\r\n                        >\r\n                            {desc}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className='job-list__drawer-filter-store job-list__drawer-filter-store--border border-niso'>\r\n                    <div className=\"job-list__filter-title\">\r\n                        <span>Khối văn phòng</span>\r\n                    </div>\r\n                    <div className=\"job-list__filter-list\">\r\n                        <div\r\n                            className={`job-list__filter-item ${activeFilter === 'office' ? 'active' : ''}`}\r\n                            onClick={() => handleFilterClick('office', 'office')}\r\n                        >\r\n                            Tất cả\r\n                        </div>\r\n                        {descriptions.office.map((desc, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className={`job-list__filter-item ${activeFilter === desc ? 'active' : ''}`}\r\n                                onClick={() => handleFilterClick(desc, 'office')}\r\n                            >\r\n                                {desc}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timkiemvieclam;","// https://viblo.asia/p/tao-slug-tu-dong-bang-javascript-va-php-Eb85owv052G\r\nexport const createSlug = (text) => {\r\n    let slug = text.toLowerCase();\r\n    slug = slug.replace(/á|à|ả|ạ|ã|ă|ắ|ằ|ẳ|ẵ|ặ|â|ấ|ầ|ẩ|ẫ|ậ/gi, 'a');\r\n    slug = slug.replace(/é|è|ẻ|ẽ|ẹ|ê|ế|ề|ể|ễ|ệ/gi, 'e');\r\n    slug = slug.replace(/i|í|ì|ỉ|ĩ|ị/gi, 'i');\r\n    slug = slug.replace(/ó|ò|ỏ|õ|ọ|ô|ố|ồ|ổ|ỗ|ộ|ơ|ớ|ờ|ở|ỡ|ợ/gi, 'o');\r\n    slug = slug.replace(/ú|ù|ủ|ũ|ụ|ư|ứ|ừ|ử|ữ|ự/gi, 'u');\r\n    slug = slug.replace(/ý|ỳ|ỷ|ỹ|ỵ/gi, 'y');\r\n    slug = slug.replace(/đ/gi, 'd');\r\n    slug = slug.replace(/[~!@#|$%^&*+=,./?><'\":;()[\\]{}_-]/gi, ''); \r\n    slug = slug.replace(/ /gi, '-');\r\n    slug = slug.replace(/-+/g, '-');\r\n    slug = slug.replace(/^-+|-+$/g, '');\r\n\r\n    return slug;\r\n};\r\n"],"names":["NotFound","_jsxs","_Fragment","children","_jsx","className","xmlns","width","height","viewBox","id","d","x","y","rx","ry","transform","cx","cy","r","points","href","style","color","Option","Select","SearchHome","locations","setLocations","useState","desiredAddressCode","setDesiredAddressCode","selectedLocation","setSelectedLocation","location","useLocation","useEffect","async","jobsCollection","collection","db","jobsData","getDocs","docs","map","doc","data","parsedLocations","Set","flatMap","job","index","includes","mainName","districts","split","code","name","trim","slice","uniqueParsedLocations","Array","from","Map","toLowerCase","values","error","console","fetchLocations","searchParams","URLSearchParams","search","query","get","handleSearch","locationParam","window","placeholder","value","onChange","e","target","onKeyPress","key","display","showSearch","background","onClick","IoIosSearch","size","_ref","handleOpenDrawer","navigate","useNavigate","locationValue","arguments","length","undefined","PiSlidersHorizontalBold","jobs","setJobs","currentPage","setCurrentPage","totalJobs","setTotalJobs","loading","setLoading","modalVisible","setModalVisible","modalContent","setModalContent","formatLocation","replace","match","district","trimmedDistrict","test","join","formatLocationModal","city","formattedCity","content","jobQuery","sortedJobs","sort","a","b","workBlock","dateA","NgayDang","reverse","dateB","Date","fetchJobs","handleJobClick","slugTitle","createSlug","title","baseUrl","handleApplyClick","stopPropagation","sluggedJobTitle","getCurrentPageJobs","fill","_","Skeleton","active","paragraph","rows","startIndex","endIndex","salary","fullText","truncatedText","maxLength","text","truncateText","dangerouslySetInnerHTML","__html","beforeParen","afterParen","endsWith","boldBeforeParentheses","handleViewMore","formattedLocations","deadline","Pagination","current","total","pageSize","page","showSizeChanger","Modal","visible","onOk","onCancel","footer","React","Timkiemvieclam","_queryParams$get","queryParams","searchQuery","filteredJobs","setFilteredJobs","setError","activeFilter","setActiveFilter","descriptions","setDescriptions","store","office","drawerVisible","setDrawerVisible","q","querySnapshot","fetchedJobs","storeDescriptions","officeDescriptions","forEach","jobData","isMatchingLocation","isArray","some","loc","push","add","department","err","handleFilterClick","filter","block","paginatedJobs","Loading","SearchMobile","desc","AllJob","Drawer","placement","onClose","handleCloseDrawer","borderRadius","closable","slug"],"sourceRoot":""}