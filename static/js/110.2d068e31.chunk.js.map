{"version":3,"file":"static/js/110.2d068e31.chunk.js","mappings":"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","sources":["admin/components/Danhsachviec.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Form, Input, Button, message, Drawer, Tag, Empty, Select, Row, Col, Modal, Checkbox, Space, Pagination, Skeleton } from 'antd';\r\nimport { EditOutlined, DeleteOutlined, PlusOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { auth, db } from '../../config';\r\nimport { collection, addDoc, getDocs, updateDoc, deleteDoc, doc, query, where } from 'firebase/firestore';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst { Option } = Select;\r\nconst { confirm } = Modal;\r\n\r\nconst Danhsachviec = () => {\r\n    const [form] = Form.useForm();\r\n    const [jobs, setJobs] = useState([]);\r\n    const [editingJob, setEditingJob] = useState(null);\r\n    const [isDrawerVisible, setIsDrawerVisible] = useState(false);\r\n    const [editorData, setEditorData] = useState('');\r\n    const [requirementsData, setRequirementsData] = useState('');\r\n    const [locations, setLocations] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [selectedProvince, setSelectedProvince] = useState(null);\r\n    const [isPriority, setIsPriority] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [filteredJobs, setFilteredJobs] = useState([]);\r\n    const [priorityFilter, setPriorityFilter] = useState('all');\r\n    const [workBlockFilter, setWorkBlockFilter] = useState('all');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(15);\r\n    const [selectedDistricts, setSelectedDistricts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n    const storage = getStorage();\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [modalContent, setModalContent] = useState([]);\r\n\r\n    const formatLocation = (location) => {\r\n        const hcmDistricts = location.match(/^Hồ Chí Minh(.+)/);\r\n        if (hcmDistricts) {\r\n            const districts = hcmDistricts[1].split(',').map(district => {\r\n                const trimmedDistrict = district.trim();\r\n                return /^\\d+$/.test(trimmedDistrict) ? `Quận ${trimmedDistrict}` : trimmedDistrict;\r\n            });\r\n            return `Hồ Chí Minh, ${districts.join(', ')}`;\r\n        }\r\n        return location;\r\n    };\r\n\r\n    const handleViewMore = (e, locations) => {\r\n        e.stopPropagation();\r\n        const formattedLocations = locations.map(formatLocation);\r\n        setModalContent(formattedLocations);\r\n        setModalVisible(true);\r\n    };\r\n\r\n    const truncateText = (text, maxLength) => {\r\n        if (text.length <= maxLength) return text;\r\n        return text.slice(0, maxLength - 3) + '... ';\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(async (user) => {\r\n            if (user) {\r\n                fetchJobs();\r\n                fetchProvinces();\r\n            } else {\r\n                navigate('/login');\r\n            }\r\n        });\r\n\r\n        return () => unsubscribe();\r\n    }, [navigate]);\r\n\r\n    const filterJobs = useCallback(() => {\r\n        let filtered = jobs.filter(job =>\r\n            job.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n        );\r\n\r\n        if (priorityFilter !== 'all') {\r\n            filtered = filtered.filter(job =>\r\n                priorityFilter === 'priority' ? job.isPriority : !job.isPriority\r\n            );\r\n        }\r\n\r\n        if (workBlockFilter !== 'all') {\r\n            filtered = filtered.filter(job => job.workBlock === workBlockFilter);\r\n        }\r\n\r\n        setFilteredJobs(filtered);\r\n    }, [jobs, searchTerm, priorityFilter, workBlockFilter]);\r\n\r\n    useEffect(() => {\r\n        filterJobs();\r\n    }, [filterJobs]);\r\n\r\n    const handleSearch = (value) => {\r\n        setSearchTerm(value);\r\n    };\r\n\r\n    const handlePriorityFilterChange = (value) => {\r\n        setPriorityFilter(value);\r\n    };\r\n\r\n    const handleWorkBlockFilterChange = (value) => {\r\n        setWorkBlockFilter(value);\r\n    };\r\n    const fetchProvinces = async () => {\r\n        try {\r\n            const response = await axios.get('https://raw.githubusercontent.com/ThangLeQuoc/vietnamese-provinces-database/refs/heads/master/json/full_json_generated_data_vn_units.json');\r\n            setProvinces(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching provinces:\", error);\r\n            message.error(\"Failed to fetch provinces.\");\r\n        }\r\n    };\r\n\r\n    const fetchJobs = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const querySnapshot = await getDocs(collection(db, 'jobs'));\r\n            const jobList = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n            jobList.sort((a, b) => moment(b.NgayDang, 'DD/MM/YYYY').valueOf() - moment(a.NgayDang, 'DD/MM/YYYY').valueOf());\r\n            setJobs(jobList);\r\n        } catch (error) {\r\n            console.error(\"Error fetching jobs:\", error);\r\n            message.error(\"Failed to fetch job listings.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const validateDate = (_, value) => {\r\n        if (!value) {\r\n            return Promise.reject('Vui lòng nhập hạn nộp');\r\n        }\r\n        const dateRegex = /^(0[1-9]|[12][0-9]|3[01])\\/(0[1-9]|1[0-2])\\/\\d{4}$/;\r\n        if (!dateRegex.test(value)) {\r\n            return Promise.reject('Hạn nộp phải có định dạng DD/MM/YYYY');\r\n        }\r\n        const inputDate = moment(value, 'DD/MM/YYYY');\r\n        if (!inputDate.isValid()) {\r\n            return Promise.reject('Ngày không hợp lệ');\r\n        }\r\n        if (inputDate.isBefore(moment().startOf('day'))) {\r\n            return Promise.reject('Hạn nộp không thể là ngày trong quá khứ');\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n\r\n\r\n    const addJob = async (jobData) => {\r\n        await addDoc(collection(db, 'jobs'), jobData);\r\n        toast.success('Thêm tin thành công', {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    };\r\n\r\n    const updateJob = async (jobId, jobData) => {\r\n        const jobRef = doc(db, 'jobs', jobId);\r\n        await updateDoc(jobRef, jobData);\r\n        toast.success('Sửa tin thành công', {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    };\r\n\r\n    const deleteJob = async (jobId) => {\r\n        confirm({\r\n            title: 'Xác nhận xóa',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: 'Bạn có chắc chắn muốn xóa tin tuyển dụng này?',\r\n            onOk: async () => {\r\n                try {\r\n                    await deleteDoc(doc(db, 'jobs', jobId));\r\n                    message.success(\"Xóa tin thành công\");\r\n                    fetchJobs();\r\n                } catch (error) {\r\n                    console.error(\"Error deleting job:\", error);\r\n                    message.error(\"Failed to delete job listing.\");\r\n                }\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel');\r\n            },\r\n        });\r\n    };\r\n\r\n    const uploadAdapter = (loader) => {\r\n        return {\r\n            upload: () => {\r\n                return new Promise((resolve, reject) => {\r\n                    loader.file.then(async (file) => {\r\n                        try {\r\n                            const storageRef = ref(storage, `CAREERS/${file.name}`);\r\n                            await uploadBytes(storageRef, file);\r\n                            const downloadURL = await getDownloadURL(storageRef);\r\n                            resolve({ default: downloadURL });\r\n                        } catch (error) {\r\n                            reject(error);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    };\r\n\r\n    const editorConfiguration = {\r\n        extraPlugins: [MyCustomUploadAdapterPlugin],\r\n        toolbar: {\r\n            items: [\r\n                'heading',\r\n                '|',\r\n                'bold',\r\n                'italic',\r\n                'link',\r\n                'bulletedList',\r\n                'numberedList',\r\n                '|',\r\n                'imageUpload',\r\n                'blockQuote',\r\n                'insertTable',\r\n                'undo',\r\n                'redo'\r\n            ]\r\n        },\r\n        image: {\r\n            toolbar: [\r\n                'imageStyle:inline',\r\n                'imageStyle:block',\r\n                'imageStyle:side',\r\n                '|',\r\n                'toggleImageCaption',\r\n                'imageTextAlternative'\r\n            ]\r\n        }\r\n    };\r\n\r\n    function MyCustomUploadAdapterPlugin(editor) {\r\n        editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\r\n            return uploadAdapter(loader);\r\n        };\r\n    }\r\n\r\n    const countPriorityJobs = () => {\r\n        return jobs.filter(job => job.isPriority).length;\r\n    };\r\n\r\n    const onFinish = async (values) => {\r\n        try {\r\n            if (!locations.length) {\r\n                toast.error('Vui lòng thêm ít nhất một địa điểm', {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                return;\r\n            }\r\n\r\n            const jobTitleQuery = query(collection(db, 'jobs'), where('title', '==', values.title));\r\n            const jobTitleSnapshot = await getDocs(jobTitleQuery);\r\n            if (!jobTitleSnapshot.empty && (!editingJob || editingJob.title !== values.title)) {\r\n                toast.warning('Tên công việc đã tồn tại', {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                return;\r\n            }\r\n\r\n            const currentPriorityCount = countPriorityJobs();\r\n            if (isPriority && currentPriorityCount >= 3 && (!editingJob || !editingJob.isPriority)) {\r\n                toast.warning('Bạn chỉ được đặt tối đa 3 tin ưu tiên', {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                return;\r\n            }\r\n\r\n            const jobData = {\r\n                ...values,\r\n                description: editorData,\r\n                requirements: requirementsData,\r\n                locations: locations,\r\n                NgayDang: editingJob ? editingJob.NgayDang : moment().format('DD/MM/YYYY'),\r\n                deadline: values.deadline,\r\n                isPriority: isPriority,\r\n            };\r\n\r\n            confirm({\r\n                title: editingJob ? 'Xác nhận chỉnh sửa' : 'Xác nhận thêm mới',\r\n                icon: <ExclamationCircleOutlined />,\r\n                content: editingJob ? 'Bạn có chắc chắn muốn chỉnh sửa tin tuyển dụng này?' : 'Bạn có chắc chắn muốn thêm tin tuyển dụng mới?',\r\n                onOk: async () => {\r\n                    if (editingJob) {\r\n                        await updateJob(editingJob.id, jobData);\r\n                    } else {\r\n                        await addJob(jobData);\r\n                    }\r\n                    form.resetFields();\r\n                    setEditorData('');\r\n                    setRequirementsData('');\r\n                    setLocations([]);\r\n                    setIsDrawerVisible(false);\r\n                    fetchJobs();\r\n                },\r\n                onCancel() {\r\n                    console.log('Cancel');\r\n                },\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Error saving job:\", error);\r\n            message.error(\"Failed to save job listing.\");\r\n        }\r\n    };\r\n\r\n    const editJob = (job) => {\r\n        setEditingJob(job);\r\n        form.setFieldsValue({\r\n            ...job,\r\n            deadline: job.deadline\r\n        });\r\n        setEditorData(job.description);\r\n        setRequirementsData(job.requirements);\r\n        setLocations(job.locations || []);\r\n        setIsPriority(job.isPriority || false);\r\n        setIsDrawerVisible(true);\r\n    };\r\n\r\n    const handleProvinceChange = (value) => {\r\n        setSelectedProvince(value);\r\n        const selectedProvinceData = provinces.find(province => province.Code === value);\r\n        setDistricts(selectedProvinceData ? selectedProvinceData.District : []);\r\n        setSelectedDistricts(null);\r\n    };\r\n\r\n    const handleDistrictChange = (values) => {\r\n        setSelectedDistricts(values);\r\n    };\r\n\r\n    const addLocation = () => {\r\n        if (selectedProvince) {\r\n            const provinceData = provinces.find(p => p.Code === selectedProvince);\r\n            let locationName = provinceData.Name;\r\n\r\n            if (selectedDistricts.length > 0) {\r\n                const districtNames = selectedDistricts.map(districtCode => {\r\n                    const districtData = districts.find(d => d.Code === districtCode);\r\n                    return districtData.Name;\r\n                });\r\n                locationName += ` (${districtNames.join(', ')})`;\r\n            }\r\n\r\n            if (!locations.includes(locationName)) {\r\n                setLocations([...locations, locationName]);\r\n            }\r\n        }\r\n        setSelectedDistricts([]);\r\n    };\r\n\r\n    const removeLocation = (locationToRemove) => {\r\n        setLocations(locations.filter(location => location !== locationToRemove));\r\n    };\r\n\r\n    const handlePageChange = (page, pageSize) => {\r\n        setCurrentPage(page);\r\n        setPageSize(pageSize);\r\n    };\r\n\r\n    const JobSkeleton = () => (\r\n        <div className=\"job-list__item\" style={{ padding: '20px', marginBottom: '20px', border: '1px solid #f0f0f0', borderRadius: '4px' }}>\r\n            <Skeleton.Input style={{ width: 500, marginBottom: 16 }} active />\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <Skeleton.Button active />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n    const paginatedJobs = filteredJobs.slice((currentPage - 1) * pageSize, currentPage * pageSize);\r\n\r\n    return (\r\n        <>\r\n            <title>Đăng tuyển</title>\r\n            <Input.Search\r\n                placeholder=\"Tìm kiếm công việc\"\r\n                onSearch={handleSearch}\r\n                size='large'\r\n                style={{ marginBottom: 15 }}\r\n            />\r\n            <Space style={{ marginBottom: 16, flexWrap: 'wrap' }} size=\"middle\">\r\n                <Select\r\n                    style={{ width: 120 }}\r\n                    placeholder=\"Ưu tiên\"\r\n                    onChange={handlePriorityFilterChange}\r\n                    value={priorityFilter}\r\n                >\r\n                    <Option value=\"all\">Tất cả</Option>\r\n                    <Option value=\"priority\">Ưu tiên</Option>\r\n                    <Option value=\"normal\">Bình thường</Option>\r\n                </Select>\r\n                <Select\r\n                    style={{ width: 150 }}\r\n                    placeholder=\"Khối làm việc\"\r\n                    onChange={handleWorkBlockFilterChange}\r\n                    value={workBlockFilter}\r\n                >\r\n                    <Option value=\"all\">Tất cả</Option>\r\n                    <Option value=\"office\">Khối văn phòng</Option>\r\n                    <Option value=\"store\">Khối cửa hàng</Option>\r\n                </Select>\r\n                <Button type=\"primary\" onClick={() => setIsDrawerVisible(true)}>\r\n                    Đăng tuyển ngay\r\n                </Button>\r\n            </Space>\r\n            {loading ? (\r\n                <>\r\n                    <JobSkeleton />\r\n                </>\r\n            ) : filteredJobs.length > 0 ? (\r\n                <div className=\"job-detail__relation-jobs\">\r\n                    <h2 className=\"job-detail__relation-jobs-title\">Công việc đã đăng</h2>\r\n\r\n                    {paginatedJobs.map((job) => (\r\n                        <div className=\"job-list__item\" key={job.id}>\r\n                            <div\r\n                                className={`job-list__item-unit job-list__item-unit--${job.workBlock === 'store' ? 'store' : 'office'}`}\r\n                            >\r\n                                {job.workBlock === 'store' ? 'Khối cửa hàng' : 'Khối văn phòng'}\r\n                            </div>\r\n                            <div className=\"job-list__item-body\">\r\n                                <div className=\"job-list__item-left\">\r\n                                    <div className=\"job-list__item-name\"> {job.isPriority && (\r\n                                        <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M18.3337 8.41667C18.417 8 18.0837 7.5 17.667 7.5L12.917 6.83333L10.7503 2.5C10.667 2.33333 10.5837 2.25 10.417 2.16667C10.0003 1.91667 9.50033 2.08333 9.25033 2.5L7.16699 6.83333L2.41699 7.5C2.16699 7.5 2.00033 7.58333 1.91699 7.75C1.58366 8.08333 1.58366 8.58333 1.91699 8.91667L5.33366 12.25L4.50033 17C4.50033 17.1667 4.50033 17.3333 4.58366 17.5C4.83366 17.9167 5.33366 18.0833 5.75033 17.8333L10.0003 15.5833L14.2503 17.8333C14.3337 17.9167 14.5003 17.9167 14.667 17.9167C14.7503 17.9167 14.7503 17.9167 14.8337 17.9167C15.2503 17.8333 15.5837 17.4167 15.5003 16.9167L14.667 12.1667L18.0837 8.83333C18.2503 8.75 18.3337 8.58333 18.3337 8.41667Z\" fill=\"#FC625D\" />\r\n                                        </svg>\r\n                                    )}\r\n                                        {job.title}</div>\r\n                                    <div className=\"job-list__item-left-info\">\r\n                                        <span className=\"mr-2\">\r\n                                            <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path d=\"M6.33326 6.99988H7.99992C8.17673 6.99988 8.3463 6.92965 8.47133 6.80462C8.59635 6.6796 8.66659 6.51003 8.66659 6.33322C8.66659 6.1564 8.59635 5.98684 8.47133 5.86181C8.3463 5.73679 8.17673 5.66655 7.99992 5.66655H7.33326V5.33322C7.33326 5.15641 7.26302 4.98684 7.13799 4.86181C7.01297 4.73679 6.8434 4.66655 6.66659 4.66655C6.48978 4.66655 6.32021 4.73679 6.19519 4.86181C6.07016 4.98684 5.99992 5.15641 5.99992 5.33322V5.69988C5.59487 5.78213 5.23483 6.01195 4.98969 6.34473C4.74456 6.6775 4.63182 7.08949 4.67335 7.50072C4.71489 7.91194 4.90775 8.29306 5.21448 8.57009C5.52121 8.84712 5.91994 9.0003 6.33326 8.99988H6.99992C7.08833 8.99988 7.17311 9.035 7.23563 9.09751C7.29814 9.16003 7.33326 9.24481 7.33326 9.33322C7.33326 9.42162 7.29814 9.50641 7.23563 9.56892C7.17311 9.63143 7.08833 9.66655 6.99992 9.66655H5.33326C5.15645 9.66655 4.98688 9.73679 4.86185 9.86181C4.73683 9.98684 4.66659 10.1564 4.66659 10.3332C4.66659 10.51 4.73683 10.6796 4.86185 10.8046C4.98688 10.9296 5.15645 10.9999 5.33326 10.9999H5.99992V11.3332C5.99992 11.51 6.07016 11.6796 6.19519 11.8046C6.32021 11.9296 6.48978 11.9999 6.66659 11.9999C6.8434 11.9999 7.01297 11.9296 7.13799 11.8046C7.26302 11.6796 7.33326 11.51 7.33326 11.3332V10.9666C7.73831 10.8843 8.09835 10.6545 8.34349 10.3217C8.58862 9.98893 8.70136 9.57694 8.65983 9.16572C8.61829 8.75449 8.42543 8.37337 8.1187 8.09634C7.81197 7.81931 7.41324 7.66613 6.99992 7.66655H6.33326C6.24485 7.66655 6.16007 7.63143 6.09755 7.56892C6.03504 7.50641 5.99992 7.42162 5.99992 7.33322C5.99992 7.24481 6.03504 7.16003 6.09755 7.09751C6.16007 7.035 6.24485 6.99988 6.33326 6.99988ZM13.9999 7.99988H11.9999V1.99988C12.0004 1.88241 11.9698 1.7669 11.9113 1.66505C11.8527 1.56319 11.7683 1.47862 11.6666 1.41988C11.5652 1.36137 11.4503 1.33057 11.3333 1.33057C11.2162 1.33057 11.1013 1.36137 10.9999 1.41988L8.99992 2.56655L6.99992 1.41988C6.89858 1.36137 6.78361 1.33057 6.66659 1.33057C6.54957 1.33057 6.4346 1.36137 6.33326 1.41988L4.33326 2.56655L2.33326 1.41988C2.23191 1.36137 2.11695 1.33057 1.99992 1.33057C1.8829 1.33057 1.76794 1.36137 1.66659 1.41988C1.56485 1.47862 1.48044 1.56319 1.42191 1.66505C1.36337 1.7669 1.33279 1.88241 1.33326 1.99988V12.6665C1.33326 13.197 1.54397 13.7057 1.91904 14.0808C2.29412 14.4558 2.80282 14.6665 3.33326 14.6665H12.6666C13.197 14.6665 13.7057 14.4558 14.0808 14.0808C14.4559 13.7057 14.6666 13.197 14.6666 12.6665V8.66655C14.6666 8.48974 14.5964 8.32017 14.4713 8.19515C14.3463 8.07012 14.1767 7.99988 13.9999 7.99988ZM3.33326 13.3332C3.15645 13.3332 2.98688 13.263 2.86185 13.138C2.73683 13.0129 2.66659 12.8434 2.66659 12.6665V3.15322L3.99992 3.91322C4.10282 3.96696 4.21718 3.99502 4.33326 3.99502C4.44934 3.99502 4.5637 3.96696 4.66659 3.91322L6.66659 2.76655L8.66659 3.91322C8.76948 3.96696 8.88384 3.99502 8.99992 3.99502C9.116 3.99502 9.23036 3.96696 9.33326 3.91322L10.6666 3.15322V12.6665C10.6684 12.894 10.709 13.1194 10.7866 13.3332H3.33326ZM13.3333 12.6665C13.3333 12.8434 13.263 13.0129 13.138 13.138C13.013 13.263 12.8434 13.3332 12.6666 13.3332C12.4898 13.3332 12.3202 13.263 12.1952 13.138C12.0702 13.0129 11.9999 12.8434 11.9999 12.6665V9.33322H13.3333V12.6665Z\" fill=\"#30C894\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                        <span>{job.salary}</span>\r\n                                    </div>\r\n                                    <div className=\"job-list__item-left-info\">\r\n                                        <span className=\"mr-2\">\r\n                                            <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path d=\"M12.0001 2.98644C10.9392 1.92558 9.50041 1.32959 8.00012 1.32959C6.49982 1.32959 5.06098 1.92558 4.00012 2.98644C2.93925 4.04731 2.34326 5.48615 2.34326 6.98644C2.34326 8.48673 2.93925 9.92558 4.00012 10.9864L7.51345 14.5064C7.57542 14.5689 7.64916 14.6185 7.7304 14.6524C7.81164 14.6862 7.89877 14.7036 7.98678 14.7036C8.07479 14.7036 8.16193 14.6862 8.24317 14.6524C8.32441 14.6185 8.39814 14.5689 8.46011 14.5064L12.0001 10.9531C13.0565 9.89666 13.65 8.46381 13.65 6.96978C13.65 5.47574 13.0565 4.0429 12.0001 2.98644ZM11.0468 9.99978L8.00012 13.0598L4.95345 9.99978C4.35155 9.39732 3.94177 8.62994 3.77591 7.79464C3.61006 6.95933 3.69557 6.09361 4.02165 5.3069C4.34773 4.52019 4.89973 3.84781 5.60787 3.37476C6.31601 2.90171 7.14851 2.64923 8.00012 2.64923C8.85173 2.64923 9.68422 2.90171 10.3924 3.37476C11.1005 3.84781 11.6525 4.52019 11.9786 5.3069C12.3047 6.09361 12.3902 6.95933 12.2243 7.79464C12.0585 8.62994 11.6487 9.39732 11.0468 9.99978ZM6.00012 4.93978C5.46193 5.47963 5.15971 6.21082 5.15971 6.97311C5.15971 7.7354 5.46193 8.4666 6.00012 9.00644C6.39996 9.40697 6.90917 9.6805 7.46388 9.79271C8.01859 9.90493 8.59408 9.85083 9.11816 9.63721C9.64224 9.42359 10.0916 9.05996 10.4098 8.59194C10.728 8.12392 10.9009 7.57236 10.9068 7.00644C10.9098 6.62858 10.837 6.25395 10.6927 5.9047C10.5484 5.55546 10.3356 5.23868 10.0668 4.97311C9.80256 4.70283 9.4875 4.48747 9.13973 4.33942C8.79196 4.19137 8.41834 4.11356 8.04038 4.11046C7.66242 4.10736 7.28758 4.17904 6.93743 4.32137C6.58728 4.4637 6.26873 4.67386 6.00012 4.93978ZM9.12678 8.05978C8.87414 8.31627 8.54026 8.47705 8.1822 8.51461C7.82414 8.55218 7.46416 8.4642 7.16379 8.26573C6.86342 8.06725 6.64131 7.77061 6.53545 7.4265C6.42959 7.08239 6.44655 6.7122 6.58342 6.37921C6.72029 6.04623 6.96858 5.77112 7.28584 5.60093C7.6031 5.43075 7.96962 5.37605 8.32274 5.44619C8.67586 5.51633 8.99366 5.70695 9.22179 5.98546C9.44992 6.26398 9.57423 6.61309 9.57345 6.97311C9.56375 7.38462 9.39111 7.77546 9.09345 8.05978H9.12678Z\" fill=\"#333333\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                        <span>\r\n                                            {(() => {\r\n                                                const fullText = job.locations.join(', ');\r\n                                                const truncatedText = truncateText(fullText, 120);\r\n                                                return (\r\n                                                    <>\r\n                                                        {formatLocation(truncatedText)}\r\n                                                        {fullText.length > 123 && (\r\n                                                            <span\r\n                                                                className=\"address-list_more-btn\"\r\n                                                                onClick={(e) => handleViewMore(e, job.locations)}\r\n                                                            >\r\n                                                                Xem thêm\r\n                                                            </span>\r\n                                                        )}\r\n                                                    </>\r\n                                                );\r\n                                            })()}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"job-list__item-mb-deadline\">\r\n                                        <span className=\"mr-2\">\r\n                                            <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path d=\"M12.6668 2.66667H11.3335V2C11.3335 1.82319 11.2633 1.65362 11.1382 1.5286C11.0132 1.40357 10.8436 1.33334 10.6668 1.33334C10.49 1.33334 10.3204 1.40357 10.1954 1.5286C10.0704 1.65362 10.0002 1.82319 10.0002 2V2.66667H6.00016V2C6.00016 1.82319 5.92992 1.65362 5.8049 1.5286C5.67988 1.40357 5.51031 1.33334 5.3335 1.33334C5.15669 1.33334 4.98712 1.40357 4.86209 1.5286C4.73707 1.65362 4.66683 1.82319 4.66683 2V2.66667H3.3335C2.80306 2.66667 2.29436 2.87738 1.91928 3.25246C1.54421 3.62753 1.3335 4.13624 1.3335 4.66667V12.6667C1.3335 13.1971 1.54421 13.7058 1.91928 14.0809C2.29436 14.456 2.80306 14.6667 3.3335 14.6667H12.6668C13.1973 14.6667 13.706 14.456 14.081 14.0809C14.4561 13.7058 14.6668 13.1971 14.6668 12.6667V4.66667C14.6668 4.13624 14.4561 3.62753 14.081 3.25246C13.706 2.87738 13.1973 2.66667 12.6668 2.66667ZM13.3335 12.6667C13.3335 12.8435 13.2633 13.0131 13.1382 13.1381C13.0132 13.2631 12.8436 13.3333 12.6668 13.3333H3.3335C3.15669 13.3333 2.98712 13.2631 2.86209 13.1381C2.73707 13.0131 2.66683 12.8435 2.66683 12.6667V8H13.3335V12.6667ZM13.3335 6.66667H2.66683V4.66667C2.66683 4.48986 2.73707 4.32029 2.86209 4.19526C2.98712 4.07024 3.15669 4 3.3335 4H4.66683V4.66667C4.66683 4.84348 4.73707 5.01305 4.86209 5.13807C4.98712 5.2631 5.15669 5.33334 5.3335 5.33334C5.51031 5.33334 5.67988 5.2631 5.8049 5.13807C5.92992 5.01305 6.00016 4.84348 6.00016 4.66667V4H10.0002V4.66667C10.0002 4.84348 10.0704 5.01305 10.1954 5.13807C10.3204 5.2631 10.49 5.33334 10.6668 5.33334C10.8436 5.33334 11.0132 5.2631 11.1382 5.13807C11.2633 5.01305 11.3335 4.84348 11.3335 4.66667V4H12.6668C12.8436 4 13.0132 4.07024 13.1382 4.19526C13.2633 4.32029 13.3335 4.48986 13.3335 4.66667V6.66667Z\" fill=\"#333333\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                        <span>Hạn nộp: {job.deadline}</span>\r\n                                    </div>\r\n                                    <div className=\"job-list__item-mb-deadline\">\r\n                                        <Button\r\n                                            icon={<EditOutlined />}\r\n                                            onClick={() => editJob(job)}\r\n                                            style={{ marginRight: '8px' }}\r\n                                        >Chỉnh sửa tin</Button>\r\n                                        <Button icon={<DeleteOutlined />} onClick={() => deleteJob(job.id)} >Xóa</Button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"job-list__item-right\">\r\n                                    <div className=\"job-list__item-deadline\">Hạn nộp {job.deadline}</div>\r\n                                    <div className=\"job-list__item-actions\">\r\n                                        <Button\r\n                                            icon={<EditOutlined />}\r\n                                            onClick={() => editJob(job)}\r\n                                            style={{ marginRight: '8px' }}\r\n                                        >Chỉnh sửa tin</Button>\r\n                                        <Button icon={<DeleteOutlined />} onClick={() => deleteJob(job.id)} >Xóa</Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    <Pagination\r\n                        current={currentPage}\r\n                        pageSize={pageSize}\r\n                        total={filteredJobs.length}\r\n                        onChange={handlePageChange}\r\n                        showSizeChanger\r\n                        align=\"end\"\r\n                        style={{ paddingRight: 16, paddingTop: 16 }}\r\n                        showQuickJumper\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <Empty description=\"Không có công việc nào\" image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n            )}\r\n\r\n\r\n            <Drawer\r\n                title={editingJob ? \"Sửa tin tuyển dụng\" : \"Thêm tin tuyển dụng\"}\r\n                placement=\"right\"\r\n                onClose={() => {\r\n                    setIsDrawerVisible(false);\r\n                    setEditingJob(null);\r\n                    setEditorData('');\r\n                    setRequirementsData('');\r\n                    setLocations([]);\r\n                    setSelectedDistricts([]);\r\n                    form.resetFields();\r\n                }}\r\n                visible={isDrawerVisible}\r\n                width={1080}\r\n            >\r\n                <Form form={form} onFinish={onFinish} layout=\"vertical\">\r\n                    <Form.Item name=\"title\" label=\"Tên công việc\" rules={[{ required: true, message: \"Tên công việc cần đăng tuyển\" }]}>\r\n                        <Input placeholder='Nhập tên công việc' />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"salary\" label=\"Mức lương\" rules={[{ required: true, message: \"Vui lòng nhập mức lương\" }]}>\r\n                        <Input placeholder='Nhập mức lương' />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"workBlock\" label=\"Khối làm việc\" rules={[{ required: true, message: \"Vui lòng chọn khối làm việc\" }]}>\r\n                        <Select placeholder=\"Chọn khối làm việc\">\r\n                            <Option value=\"office\">Khối văn phòng</Option>\r\n                            <Option value=\"store\">Khối cửa hàng</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Địa điểm\" required>\r\n                        <Row gutter={16}>\r\n                            <Col span={12}>\r\n                                <Select\r\n                                    placeholder=\"Chọn Tỉnh/Thành phố\"\r\n                                    onChange={handleProvinceChange}\r\n                                    value={selectedProvince}\r\n                                    style={{ width: '100%' }}\r\n                                >\r\n                                    {provinces.map(province => (\r\n                                        <Option key={province.Code} value={province.Code}>{province.Name}</Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Select\r\n                                    mode=\"multiple\"\r\n                                    placeholder=\"Chọn Quận/Huyện\"\r\n                                    onChange={handleDistrictChange}\r\n                                    value={selectedDistricts}\r\n                                    style={{ width: '100%' }}\r\n                                    disabled={!selectedProvince}\r\n                                >\r\n                                    {districts.map(district => (\r\n                                        <Option key={district.Code} value={district.Code}>{district.Name}</Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Button type=\"primary\" onClick={addLocation} icon={<PlusOutlined />} style={{ marginTop: '8px' }}>\r\n                            Thêm địa điểm\r\n                        </Button>\r\n                    </Form.Item>\r\n                    <div style={{ marginTop: '16px' }}>\r\n                        {locations.map(location => (\r\n                            <Tag\r\n                                key={location}\r\n                                closable\r\n                                onClose={() => removeLocation(location)}\r\n                                style={{ marginBottom: '8px' }}\r\n                            >\r\n                                {location}\r\n                            </Tag>\r\n                        ))}\r\n                    </div>\r\n                    <Form.Item\r\n                        name=\"deadline\"\r\n                        label=\"Hạn nộp\"\r\n                        rules={[\r\n                            { required: true, validator: validateDate }\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            placeholder=\"DD/MM/YYYY\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Mô tả công việc\" required>\r\n                        <CKEditor\r\n                            editor={ClassicEditor}\r\n                            data={editorData}\r\n                            config={editorConfiguration}\r\n                            onChange={(event, editor) => {\r\n                                const data = editor.getData();\r\n                                setEditorData(data);\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Yêu cầu công việc\">\r\n                        <CKEditor\r\n                            editor={ClassicEditor}\r\n                            data={requirementsData}\r\n                            config={editorConfiguration}\r\n                            onChange={(event, editor) => {\r\n                                const data = editor.getData();\r\n                                setRequirementsData(data);\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n                    <Space direction='horizontal'>\r\n                        <Form.Item>\r\n                            <Checkbox\r\n                                checked={isPriority}\r\n                                onChange={(e) => setIsPriority(e.target.checked)}\r\n                            >\r\n                                Tin ưu tiên\r\n                            </Checkbox>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                {editingJob ? \"Xác nhận chỉnh sửa\" : \"Xác nhận thêm mới\"}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Space>\r\n                </Form>\r\n            </Drawer>\r\n            <Modal\r\n                title=\"Danh sách địa điểm làm việc\"\r\n                visible={modalVisible}\r\n                onOk={() => setModalVisible(false)}\r\n                onCancel={() => setModalVisible(false)}\r\n                footer={null}\r\n            >\r\n                {modalContent.map((location, index) => (\r\n                    <React.Fragment key={index}>\r\n                        <div className='job-list__filter-item'>{location}</div>\r\n                        {index < modalContent.length - 1 && <></>}\r\n                    </React.Fragment>\r\n                ))}\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Danhsachviec;"],"names":["Option","Select","confirm","Modal","Danhsachviec","form","Form","useForm","jobs","setJobs","useState","editingJob","setEditingJob","isDrawerVisible","setIsDrawerVisible","editorData","setEditorData","requirementsData","setRequirementsData","locations","setLocations","provinces","setProvinces","districts","setDistricts","selectedProvince","setSelectedProvince","isPriority","setIsPriority","searchTerm","setSearchTerm","filteredJobs","setFilteredJobs","priorityFilter","setPriorityFilter","workBlockFilter","setWorkBlockFilter","currentPage","setCurrentPage","pageSize","setPageSize","selectedDistricts","setSelectedDistricts","loading","setLoading","navigate","useNavigate","storage","getStorage","modalVisible","setModalVisible","modalContent","setModalContent","formatLocation","location","hcmDistricts","match","split","map","district","trimmedDistrict","trim","test","join","useEffect","unsubscribe","auth","onAuthStateChanged","async","user","fetchJobs","fetchProvinces","filterJobs","useCallback","filtered","filter","job","title","toLowerCase","includes","workBlock","response","axios","get","data","error","console","message","jobList","getDocs","collection","db","docs","doc","id","sort","a","b","moment","NgayDang","valueOf","deleteJob","icon","_jsx","ExclamationCircleOutlined","content","onOk","deleteDoc","jobId","success","onCancel","log","editorConfiguration","extraPlugins","editor","plugins","createUploadAdapter","loader","upload","Promise","resolve","reject","file","then","storageRef","ref","name","uploadBytes","downloadURL","getDownloadURL","default","uploadAdapter","toolbar","items","image","editJob","setFieldsValue","deadline","description","requirements","JobSkeleton","_jsxs","className","style","padding","marginBottom","border","borderRadius","children","Skeleton","Input","width","active","display","justifyContent","Button","paginatedJobs","slice","_Fragment","Search","placeholder","onSearch","value","size","Space","flexWrap","onChange","type","onClick","length","height","viewBox","fill","xmlns","d","salary","fullText","truncatedText","maxLength","text","truncateText","e","handleViewMore","stopPropagation","formattedLocations","EditOutlined","marginRight","DeleteOutlined","Pagination","current","total","handlePageChange","page","showSizeChanger","align","paddingRight","paddingTop","showQuickJumper","Empty","PRESENTED_IMAGE_SIMPLE","Drawer","placement","onClose","resetFields","visible","onFinish","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","jobTitleQuery","query","where","values","empty","warning","currentPriorityCount","jobData","format","jobRef","updateDoc","updateJob","addDoc","addJob","layout","Item","label","rules","required","Row","gutter","Col","span","selectedProvinceData","find","province","Code","District","Name","mode","disabled","addLocation","locationName","p","districtCode","PlusOutlined","marginTop","Tag","closable","removeLocation","locationToRemove","validator","validateDate","_","inputDate","isValid","isBefore","startOf","CKEditor","ClassicEditor","config","event","getData","direction","Checkbox","checked","target","htmlType","footer","index","React"],"sourceRoot":""}