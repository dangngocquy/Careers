{"version":3,"file":"static/js/935.7e7ab650.chunk.js","mappings":"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","sources":["admin/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { collection, query, getDocs } from 'firebase/firestore';\r\nimport { db } from '../../config';\r\nimport { Card, CardBody, CardTitle, CardText, ListGroup, ListGroupItem, Badge, Form } from 'react-bootstrap';\r\nimport { UserOutlined, MailOutlined, PhoneOutlined, IdcardOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Drawer, Button } from 'antd';\r\n\r\nconst Dashboard = () => {\r\n    const [cvData, setCvData] = useState([]);\r\n    const [stats, setStats] = useState({\r\n        totalApplications: 0,\r\n        savedApplications: 0,\r\n        approvedApplications: 0,\r\n        applicationsToday: 0\r\n    });\r\n    const [timeRange, setTimeRange] = useState('week');\r\n    const [chartOptions, setChartOptions] = useState({});\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n    const [drawerVisible, setDrawerVisible] = useState(false);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth < 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    const filterDataByTimeRange = useCallback((data) => {\r\n        const startDate = {\r\n            week: moment().startOf('week'),\r\n            month: moment().startOf('month'),\r\n            year: moment().startOf('year')\r\n        }[timeRange];\r\n\r\n        return data.filter(cv => moment(cv.NgayGuiCV, 'DD/MM/YYYY').isSameOrAfter(startDate));\r\n    }, [timeRange]);\r\n\r\n    const updateChartOptions = useCallback((data) => {\r\n        const filteredData = filterDataByTimeRange(data);\r\n        const categories = filteredData.map(cv => moment(cv.NgayGuiCV, 'DD/MM/YYYY').format('DD/MM/YYYY'));\r\n        const totalApplicationsData = filteredData.map(() => 1);\r\n        const approvedApplicationsData = filteredData.map(cv => cv.PheDuyet ? 1 : 0);\r\n\r\n        setChartOptions({\r\n            title: {\r\n                text: 'Tổng đơn ứng tuyển và Đơn đã xác nhận'\r\n            },\r\n            xAxis: {\r\n                categories\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Số lượng đơn'\r\n                }\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'Tổng đơn ứng tuyển',\r\n                    data: totalApplicationsData\r\n                },\r\n                {\r\n                    name: 'Đơn đã xác nhận',\r\n                    data: approvedApplicationsData\r\n                }\r\n            ]\r\n        });\r\n    }, [filterDataByTimeRange]);\r\n\r\n    useEffect(() => {\r\n        const fetchCVData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'CV'));\r\n                const querySnapshot = await getDocs(q);\r\n                const data = querySnapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }));\r\n\r\n                const sortedData = data.sort((a, b) =>\r\n                    moment(b.NgayGuiCV, 'DD/MM/YYYY').valueOf() - moment(a.NgayGuiCV, 'DD/MM/YYYY').valueOf()\r\n                );\r\n\r\n                setCvData(sortedData);\r\n                calculateStats(sortedData);\r\n                updateChartOptions(sortedData);\r\n            } catch (err) {\r\n                console.error(\"Error fetching CV data: \", err);\r\n            }\r\n        };\r\n\r\n        fetchCVData();\r\n    }, [timeRange, updateChartOptions]);\r\n\r\n    const calculateStats = (data) => {\r\n        const today = moment().format('DD/MM/YYYY');\r\n        setStats({\r\n            totalApplications: data.length,\r\n            savedApplications: data.filter(cv => cv.LuuHoSo).length,\r\n            approvedApplications: data.filter(cv => cv.PheDuyet).length,\r\n            applicationsToday: data.filter(cv => cv.NgayGuiCV === today).length\r\n        });\r\n    };\r\n\r\n    const handleTimeRangeChange = (e) => {\r\n        setTimeRange(e.target.value);\r\n    };\r\n\r\n    const showDrawer = () => {\r\n        setDrawerVisible(true);\r\n    };\r\n\r\n    const hideDrawer = () => {\r\n        setDrawerVisible(false);\r\n    };\r\n\r\n    const renderStatsCards = () => (\r\n        <div className=\"row mb-4\">\r\n            <div className=\"col-md-3\">\r\n                <Card className=\"text-center\">\r\n                    <CardBody>\r\n                        <CardTitle>Tổng đơn ứng tuyển</CardTitle>\r\n                        <CardText>{stats.totalApplications}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n                <Card className=\"text-center\">\r\n                    <CardBody>\r\n                        <CardTitle>Đơn đã lưu</CardTitle>\r\n                        <CardText>{stats.savedApplications}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n                <Card className=\"text-center\">\r\n                    <CardBody>\r\n                        <CardTitle>Đơn đã xác nhận</CardTitle>\r\n                        <CardText>{stats.approvedApplications}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n                <Card className=\"text-center\">\r\n                    <CardBody>\r\n                        <CardTitle>Tổng đơn trong ngày</CardTitle>\r\n                        <CardText>{stats.applicationsToday}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {isMobile ? (\r\n                <>\r\n                    <Button type=\"primary\" onClick={showDrawer} style={{ marginBottom: 16 }}>\r\n                        Hiển thị Thống kê\r\n                    </Button>\r\n                    <Drawer\r\n                        title=\"Thống kê ứng tuyển\"\r\n                        placement=\"right\"\r\n                        closable={true}\r\n                        onClose={hideDrawer}\r\n                        visible={drawerVisible}\r\n                    >\r\n                        {renderStatsCards()}\r\n                    </Drawer>\r\n                </>\r\n            ) : (\r\n                renderStatsCards()\r\n            )}\r\n\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label>Phân tích theo</Form.Label>\r\n                <Form.Control as=\"select\" value={timeRange} onChange={handleTimeRangeChange}>\r\n                    <option value=\"week\">Trong tuần</option>\r\n                    <option value=\"month\">Trong tháng</option>\r\n                    <option value=\"year\">Trong năm</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <HighchartsReact highcharts={Highcharts} options={chartOptions} />\r\n\r\n            <Card className=\"mt-4\">\r\n                <Card.Header>Đơn ứng tuyển gần đây</Card.Header>\r\n                <Card.Body>\r\n                    <ListGroup>\r\n                        {cvData.slice(0, 5).map(cv => (\r\n                            <ListGroupItem key={cv.id} className=\"d-flex justify-content-between align-items-center\">\r\n                                <div>\r\n                                    <h5>{cv.HoTen}</h5>\r\n                                    <p className=\"mb-1\"><UserOutlined /> {cv.Vitriungtuyen}</p>\r\n                                    <p className=\"mb-1\"><MailOutlined /> {cv.Email}</p>\r\n                                    <p className=\"mb-1\"><PhoneOutlined /> {cv.SoDienThoai}</p>\r\n                                    <p className=\"mb-1\"><IdcardOutlined /> {cv.NgayGuiCV}</p>\r\n                                </div>\r\n                                <div>\r\n                                    {cv.LuuHoSo && <Badge bg=\"info\" className=\"me-2\">Đã lưu</Badge>}\r\n                                    {cv.PheDuyet && <Badge bg=\"success\">Đã phê duyệt</Badge>}\r\n                                </div>\r\n                            </ListGroupItem>\r\n                        ))}\r\n                    </ListGroup>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["Dashboard","cvData","setCvData","useState","stats","setStats","totalApplications","savedApplications","approvedApplications","applicationsToday","timeRange","setTimeRange","chartOptions","setChartOptions","isMobile","setIsMobile","window","innerWidth","drawerVisible","setDrawerVisible","useEffect","handleResize","addEventListener","removeEventListener","filterDataByTimeRange","useCallback","data","startDate","week","moment","startOf","month","year","filter","cv","NgayGuiCV","isSameOrAfter","updateChartOptions","filteredData","categories","map","format","totalApplicationsData","approvedApplicationsData","PheDuyet","title","text","xAxis","yAxis","series","name","async","q","query","collection","db","querySnapshot","getDocs","sortedData","docs","doc","id","sort","a","b","valueOf","calculateStats","err","console","error","fetchCVData","today","length","LuuHoSo","renderStatsCards","_jsxs","className","children","_jsx","Card","CardBody","CardTitle","CardText","_Fragment","Button","type","onClick","showDrawer","style","marginBottom","Drawer","placement","closable","onClose","hideDrawer","visible","Form","Group","Label","Control","as","value","onChange","e","target","HighchartsReact","highcharts","Highcharts","options","Header","Body","ListGroup","slice","ListGroupItem","HoTen","UserOutlined","Vitriungtuyen","MailOutlined","Email","PhoneOutlined","SoDienThoai","IdcardOutlined","Badge","bg"],"sourceRoot":""}