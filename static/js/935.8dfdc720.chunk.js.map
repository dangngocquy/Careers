{"version":3,"file":"static/js/935.8dfdc720.chunk.js","mappings":"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","sources":["admin/components/Dashboard.jsx","admin/components/Hoso/Ungvien.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { collection, query, getDocs, doc, getDoc } from 'firebase/firestore';\r\nimport { db } from '../../config';\r\nimport { Card, CardBody, CardTitle, CardText, Form } from 'react-bootstrap';\r\nimport { UserOutlined, MailOutlined, PhoneOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { Drawer, Button, Select } from 'antd';\r\nimport { MdArrowRightAlt } from \"react-icons/md\";\r\nimport Ungvien from './Hoso/Ungvien';\r\n\r\nconst { Option } = Select;\r\n\r\nconst Dashboard = () => {\r\n    const [cvData, setCvData] = useState([]);\r\n    const [stats, setStats] = useState({\r\n        totalApplications: 0,\r\n        savedApplications: 0,\r\n        approvedApplications: 0,\r\n        applicationsToday: 0\r\n    });\r\n    const [timeRange, setTimeRange] = useState('week');\r\n    const [chartOptions, setChartOptions] = useState({});\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n    const [drawerVisible, setDrawerVisible] = useState(false);\r\n    const [accessTimeRange, setAccessTimeRange] = useState('day');\r\n    const [filteredAccessCount, setFilteredAccessCount] = useState(0);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth < 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    const filterDataByTimeRange = useCallback((data) => {\r\n        const startDate = {\r\n            week: moment().startOf('week'),\r\n            month: moment().startOf('month'),\r\n            year: moment().startOf('year')\r\n        }[timeRange];\r\n\r\n        return data.filter(cv => moment(cv.NgayGuiCV, 'DD/MM/YYYY').isSameOrAfter(startDate));\r\n    }, [timeRange]);\r\n\r\n    const updateChartOptions = useCallback((data) => {\r\n        const filteredData = filterDataByTimeRange(data);\r\n        const categories = filteredData.map(cv => moment(cv.NgayGuiCV, 'DD/MM/YYYY').format('DD/MM/YYYY'));\r\n        const totalApplicationsData = filteredData.map(() => 1);\r\n        const approvedApplicationsData = filteredData.map(cv => cv.PheDuyet ? 1 : 0);\r\n\r\n        setChartOptions({\r\n            title: {\r\n                text: 'Tổng đơn ứng tuyển và Đơn đã xác nhận'\r\n            },\r\n            xAxis: {\r\n                categories\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Số lượng đơn'\r\n                }\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'Tổng đơn ứng tuyển',\r\n                    data: totalApplicationsData\r\n                },\r\n                {\r\n                    name: 'Đơn đã xác nhận',\r\n                    data: approvedApplicationsData\r\n                }\r\n            ]\r\n        });\r\n    }, [filterDataByTimeRange]);\r\n\r\n    useEffect(() => {\r\n        const fetchAccessData = async () => {\r\n            const demTruyCapRef = doc(db, 'DemTruyCap', 'stats');\r\n            const docSnap = await getDoc(demTruyCapRef);\r\n\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const today = moment().format('DD/MM/YYYY');\r\n                let count = 0;\r\n\r\n                switch (accessTimeRange) {\r\n                    case 'day':\r\n                        count = data.count[data.date.indexOf(today)] || 0;\r\n                        break;\r\n                    case 'week':\r\n                        count = data.date.reduce((acc, date, index) => {\r\n                            if (moment(date, 'DD/MM/YYYY').isSame(moment(), 'week')) {\r\n                                return acc + data.count[index];\r\n                            }\r\n                            return acc;\r\n                        }, 0);\r\n                        break;\r\n                    case 'month':\r\n                        count = data.date.reduce((acc, date, index) => {\r\n                            if (moment(date, 'DD/MM/YYYY').isSame(moment(), 'month')) {\r\n                                return acc + data.count[index];\r\n                            }\r\n                            return acc;\r\n                        }, 0);\r\n                        break;\r\n                    case 'year':\r\n                        count = data.date.reduce((acc, date, index) => {\r\n                            if (moment(date, 'DD/MM/YYYY').isSame(moment(), 'year')) {\r\n                                return acc + data.count[index];\r\n                            }\r\n                            return acc;\r\n                        }, 0);\r\n                        break;\r\n                    default:\r\n                        count = 0;\r\n                        break;\r\n                }\r\n\r\n                setFilteredAccessCount(count);\r\n            }\r\n        };\r\n\r\n        fetchAccessData();\r\n    }, [accessTimeRange]);\r\n\r\n    const handleAccessTimeRangeChange = (value) => {\r\n        setAccessTimeRange(value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchCVData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'CV'));\r\n                const querySnapshot = await getDocs(q);\r\n                const data = querySnapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }));\r\n\r\n                const sortedData = data.sort((a, b) =>\r\n                    moment(b.NgayGuiCV, 'DD/MM/YYYY').valueOf() - moment(a.NgayGuiCV, 'DD/MM/YYYY').valueOf()\r\n                );\r\n\r\n                setCvData(sortedData);\r\n                calculateStats(sortedData);\r\n                updateChartOptions(sortedData);\r\n            } catch (err) {\r\n                console.error(\"Error fetching CV data: \", err);\r\n            }\r\n        };\r\n\r\n        fetchCVData();\r\n    }, [timeRange, updateChartOptions]);\r\n\r\n    const calculateStats = (data) => {\r\n        const today = moment().format('DD/MM/YYYY');\r\n        setStats({\r\n            totalApplications: data.length,\r\n            savedApplications: data.filter(cv => cv.LuuHoSo).length,\r\n            approvedApplications: data.filter(cv => cv.PheDuyet).length,\r\n            applicationsToday: data.filter(cv => cv.NgayGuiCV === today).length\r\n        });\r\n    };\r\n\r\n    const handleTimeRangeChange = (e) => {\r\n        setTimeRange(e.target.value);\r\n    };\r\n\r\n    const showDrawer = () => {\r\n        setDrawerVisible(true);\r\n    };\r\n\r\n    const hideDrawer = () => {\r\n        setDrawerVisible(false);\r\n    };\r\n\r\n    const renderStatsCards = () => (\r\n        <div className=\"row mb-4\">\r\n            <div className=\"col\">\r\n                <Card className=\"text-center\">\r\n                    <CardBody>\r\n                        <CardTitle>Tổng đơn ứng tuyển</CardTitle>\r\n                        <CardText>{stats.totalApplications}</CardText>\r\n                        <Button type='link' onClick={() => navigate('/auth/ho-so-ung-tuyen')} icon={<MdArrowRightAlt />}>Xem tất cả</Button>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n            <div className=\"col\">\r\n                <Card className=\"text-center\">\r\n                    <CardBody>\r\n                        <CardTitle>Đơn đã lưu</CardTitle>\r\n                        <CardText>{stats.savedApplications}</CardText>\r\n                        <Button type='link' onClick={() => navigate('/auth/ho-so-da-luu')} icon={<MdArrowRightAlt />}>Xem tất cả</Button>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n            <div className=\"col\">\r\n                <Card className=\"text-center\">\r\n                    <CardBody>\r\n                        <CardTitle>Đơn đã xác nhận</CardTitle>\r\n                        <CardText>{stats.approvedApplications}</CardText>\r\n                        <Button type='link' icon={<MdArrowRightAlt />}>Xem tất cả</Button>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n            <div className=\"col\">\r\n                <Card className=\"text-center\">\r\n                    <CardBody>\r\n                        <CardTitle>Tổng đơn trong ngày</CardTitle>\r\n                        <CardText>{stats.applicationsToday}</CardText>\r\n                        <Button type='link' icon={<MdArrowRightAlt />}>Xem tất cả</Button>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n            <div className=\"col\">\r\n                <Card className=\"text-center\">\r\n                    <CardBody>\r\n                        <CardTitle>Tổng lượt truy cập</CardTitle>\r\n                        <CardText>{filteredAccessCount}</CardText>\r\n                        <Select\r\n                            defaultValue=\"day\"\r\n                            style={{ width: 120 }}\r\n                            onChange={handleAccessTimeRangeChange}\r\n                        >\r\n                            <Option value=\"day\">Trong ngày</Option>\r\n                            <Option value=\"week\">Trong tuần</Option>\r\n                            <Option value=\"month\">Trong tháng</Option>\r\n                            <Option value=\"year\">Trong năm</Option>\r\n                        </Select>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {isMobile ? (\r\n                <>\r\n                    <Button type=\"primary\" onClick={showDrawer} style={{ marginBottom: 16 }}>\r\n                        Hiển thị Thống kê\r\n                    </Button>\r\n                    <Drawer\r\n                        title=\"Thống kê ứng tuyển\"\r\n                        placement=\"right\"\r\n                        closable={true}\r\n                        onClose={hideDrawer}\r\n                        visible={drawerVisible}\r\n                    >\r\n                        {renderStatsCards()}\r\n                    </Drawer>\r\n                </>\r\n            ) : (\r\n                renderStatsCards()\r\n            )}\r\n\r\n            <Card className=\"mt-4\">\r\n                <Card.Header>Đơn ứng tuyển gần đây <Button type='link' onClick={() => navigate('/auth/ho-so-ung-tuyen')} icon={<MdArrowRightAlt />}>Xem tất cả</Button></Card.Header>\r\n                {cvData.slice(0, 5).map(cv => (\r\n                    <div className=\"job-list__item\">\r\n                        <div className={`job-list__item-unit job-list__item-unit--${cv.Khoiungtuyen === 'store' ? 'store' : 'office'}`}>{cv.Khoiungtuyen === 'store' ? 'Khối cửa hàng' : 'Khối văn phòng'}</div>\r\n                        <div className=\"job-list__item-body\">\r\n                            <div className=\"job-list__item-left\">\r\n                                <div className=\"job-list__item-name\">{cv.Vitriungtuyen}</div>\r\n                                <div className=\"job-list__item-left-info\">\r\n                                    <span className=\"mr-2\">\r\n                                        <UserOutlined />\r\n                                    </span>\r\n                                    <span>{cv.HoTen}</span>\r\n                                </div>\r\n                                <div className=\"job-list__item-left-info\">\r\n                                    <span className=\"mr-2\">\r\n                                        <MailOutlined />\r\n                                    </span>\r\n                                    <span>{cv.Email}</span>\r\n                                </div>\r\n                                <div className=\"job-list__item-left-info\">\r\n                                    <span className=\"mr-2\">\r\n                                        <PhoneOutlined />\r\n                                    </span>\r\n                                    <span>{cv.SoDienThoai}</span>\r\n                                </div>\r\n                                <div className=\"job-list__item-mb-deadline\">\r\n                                    <span className=\"mr-2\">\r\n                                        <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M12.6668 2.66667H11.3335V2C11.3335 1.82319 11.2633 1.65362 11.1382 1.5286C11.0132 1.40357 10.8436 1.33334 10.6668 1.33334C10.49 1.33334 10.3204 1.40357 10.1954 1.5286C10.0704 1.65362 10.0002 1.82319 10.0002 2V2.66667H6.00016V2C6.00016 1.82319 5.92992 1.65362 5.8049 1.5286C5.67988 1.40357 5.51031 1.33334 5.3335 1.33334C5.15669 1.33334 4.98712 1.40357 4.86209 1.5286C4.73707 1.65362 4.66683 1.82319 4.66683 2V2.66667H3.3335C2.80306 2.66667 2.29436 2.87738 1.91928 3.25246C1.54421 3.62753 1.3335 4.13624 1.3335 4.66667V12.6667C1.3335 13.1971 1.54421 13.7058 1.91928 14.0809C2.29436 14.456 2.80306 14.6667 3.3335 14.6667H12.6668C13.1973 14.6667 13.706 14.456 14.081 14.0809C14.4561 13.7058 14.6668 13.1971 14.6668 12.6667V4.66667C14.6668 4.13624 14.4561 3.62753 14.081 3.25246C13.706 2.87738 13.1973 2.66667 12.6668 2.66667ZM13.3335 12.6667C13.3335 12.8435 13.2633 13.0131 13.1382 13.1381C13.0132 13.2631 12.8436 13.3333 12.6668 13.3333H3.3335C3.15669 13.3333 2.98712 13.2631 2.86209 13.1381C2.73707 13.0131 2.66683 12.8435 2.66683 12.6667V8H13.3335V12.6667ZM13.3335 6.66667H2.66683V4.66667C2.66683 4.48986 2.73707 4.32029 2.86209 4.19526C2.98712 4.07024 3.15669 4 3.3335 4H4.66683V4.66667C4.66683 4.84348 4.73707 5.01305 4.86209 5.13807C4.98712 5.2631 5.15669 5.33334 5.3335 5.33334C5.51031 5.33334 5.67988 5.2631 5.8049 5.13807C5.92992 5.01305 6.00016 4.84348 6.00016 4.66667V4H10.0002V4.66667C10.0002 4.84348 10.0704 5.01305 10.1954 5.13807C10.3204 5.2631 10.49 5.33334 10.6668 5.33334C10.8436 5.33334 11.0132 5.2631 11.1382 5.13807C11.2633 5.01305 11.3335 4.84348 11.3335 4.66667V4H12.6668C12.8436 4 13.0132 4.07024 13.1382 4.19526C13.2633 4.32029 13.3335 4.48986 13.3335 4.66667V6.66667Z\" fill=\"#333333\" />\r\n                                        </svg>\r\n                                    </span>\r\n                                    <span>Ngày gửi CV {cv.NgayGuiCV}</span>\r\n                                </div>\r\n                                <div className=\"job-list__item-mb-deadline\">\r\n                                    <Ungvien cv={cv} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"job-list__item-right\">\r\n                                <div className=\"job-list__item-deadline\">Ngày gửi CV {cv.NgayGuiCV}</div>\r\n                                <Ungvien cv={cv} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </Card>\r\n\r\n            <Form.Group className=\"mb-3\" style={{ marginTop: 15 }}>\r\n                <Form.Label>Phân tích theo</Form.Label>\r\n                <Form.Control as=\"select\" value={timeRange} onChange={handleTimeRangeChange}>\r\n                    <option value=\"week\">Trong tuần</option>\r\n                    <option value=\"month\">Trong tháng</option>\r\n                    <option value=\"year\">Trong năm</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <HighchartsReact highcharts={Highcharts} options={chartOptions} />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Drawer, Avatar, Typography, Descriptions, Card, message, Modal } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { doc, updateDoc } from 'firebase/firestore';\r\nimport { db } from '../../../config';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst Ungvien = ({ cv, onUpdate }) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isRejectModalVisible, setIsRejectModalVisible] = useState(false);\r\n    const [isApproved, setIsApproved] = useState(cv.PheDuyet);\r\n    const [isRejected, setIsRejected] = useState(cv.TuChoi);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsApproved(cv.PheDuyet);\r\n        setIsRejected(cv.TuChoi);\r\n    }, [cv.PheDuyet, cv.TuChoi]);\r\n\r\n    const showDrawer = () => setVisible(true);\r\n    const onClose = () => setVisible(false);\r\n\r\n    const showModal = () => setIsModalVisible(true);\r\n    const handleCancel = () => setIsModalVisible(false);\r\n\r\n    const showRejectModal = () => setIsRejectModalVisible(true);\r\n    const handleRejectCancel = () => setIsRejectModalVisible(false);\r\n\r\n    const handleApproveCV = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const cvRef = doc(db, 'CV', cv.id);\r\n            await updateDoc(cvRef, {\r\n                PheDuyet: true,\r\n                TuChoi: false\r\n            });\r\n            setIsApproved(true);\r\n            setIsRejected(false);\r\n            toast.success('Hồ sơ đã được phê duyệt.', {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            if (onUpdate) {\r\n                onUpdate(cv.id, true, false);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error approving CV: \", error);\r\n            message.error('Có lỗi xảy ra khi phê duyệt hồ sơ');\r\n        } finally {\r\n            setIsLoading(false);\r\n            setIsModalVisible(false);\r\n        }\r\n    };\r\n\r\n    const handleRejectCV = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const cvRef = doc(db, 'CV', cv.id);\r\n            await updateDoc(cvRef, {\r\n                PheDuyet: false,\r\n                TuChoi: true\r\n            });\r\n            setIsApproved(false);\r\n            setIsRejected(true);\r\n            toast.success('Hồ sơ đã bị từ chối.', {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            if (onUpdate) {\r\n                onUpdate(cv.id, false, true);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error rejecting CV: \", error);\r\n            message.error('Có lỗi xảy ra khi từ chối hồ sơ');\r\n        } finally {\r\n            setIsLoading(false);\r\n            setIsRejectModalVisible(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button type=\"primary\" onClick={showDrawer}>\r\n                Xem hồ sơ ứng viên\r\n            </Button>\r\n            <Drawer\r\n                title={`Hồ sơ ứng viên: ${cv.HoTen}`}\r\n                placement=\"right\"\r\n                onClose={onClose}\r\n                open={visible}\r\n                width={720}\r\n            >\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '16px' }}>\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '16px' }}>\r\n                        <Avatar\r\n                            size={64}\r\n                            src={cv.Hinhdaidien}\r\n                            icon={!cv.Hinhdaidien && <UserOutlined />}\r\n                        />\r\n                        <div>\r\n                            <Title level={2} style={{ marginBottom: 5 }}>{cv.HoTen}</Title>\r\n                            <Text>{cv.Vitriungtuyen}</Text>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"apply-form__group-body--line\"></div>\r\n                    <Descriptions title=\"Thông tin cá nhân\" column={window.innerWidth < 768 ? 1 : 2}>\r\n                        <Descriptions.Item label=\"Email\">{cv.Email}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Số điện thoại\">{cv.SoDienThoai}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Ngày sinh\">{cv.Ngaysinh}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"CMND/CCCD\">{cv.CMND}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Giới tính\">{cv.GioiTinh}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Chiều cao\">{cv.ChieuCao} cm</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Cân nặng\">{cv.CanNang} kg</Descriptions.Item>\r\n                    </Descriptions>\r\n\r\n                    <Descriptions title=\"Thông tin chung\" column={1}>\r\n                        <Descriptions.Item label=\"Địa chỉ\">\r\n                            {`${cv.Diachi}, ${cv.Phuongxa}, ${cv.Quanhuyen}, ${cv.City}`}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Thu nhập mong muốn\">{cv.Thunhapmongmuon}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Kinh nghiệm\">{cv.Kinhnghiem}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Ngày gửi CV\">{cv.NgayGuiCV}</Descriptions.Item>\r\n                    </Descriptions>\r\n                    <div class=\"apply-form__group-body--line\"></div>\r\n                    <div>\r\n                        {cv.KinhNghiemLamViec && Object.entries(cv.KinhNghiemLamViec).map(([key, exp]) => (\r\n                            <>\r\n                                <Title level={3}>Kinh nghiệm làm việc</Title>\r\n                                <Card key={key} style={{ marginBottom: '16px' }}>\r\n                                    <Card.Meta\r\n                                        title={exp.ViTriDamNhiem}\r\n                                        description={exp.CongTyDoanhNghiep}\r\n                                    />\r\n                                    <Text type=\"secondary\">\r\n                                        {exp.TuNgay} - {exp.DangLamViec ? 'Hiện tại' : exp.DenNgay}\r\n                                    </Text>\r\n                                    <p>{exp.MoTaCongViec}</p>\r\n                                </Card>\r\n                                <div class=\"apply-form__group-body--line\"></div>\r\n                            </>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <Descriptions title=\"Thông tin khác\" column={window.innerWidth < 768 ? 1 : 2}>\r\n                        <Descriptions.Item label=\"Thu nhập mong muốn\" labelStyle={{ width: '200px' }}>\r\n                            {cv.Thunhapmongmuon}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Bạn có sẵn sàng làm việc xoay ca không? (Ca sáng, ca tối)\" labelStyle={{ width: '200px' }}>\r\n                            {cv.Cauhoi1}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Bạn có thể làm việc vào các ngày Lễ/Tết không?\" labelStyle={{ width: '200px' }}>\r\n                            {cv.Cauhoi2}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Bạn có sẵn sàng làm việc cuối tuần không?\" labelStyle={{ width: '200px' }}>\r\n                            {cv.Cauhoi3}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Bạn có sẵn sàng làm việc ca tối không?\" labelStyle={{ width: '200px' }}>\r\n                            {cv.Cauhoi4}\r\n                        </Descriptions.Item>\r\n                    </Descriptions>\r\n                </div>\r\n                <div class=\"apply-form__group-body--line\"></div>\r\n                <div style={{ display: 'flex', gap: '16px', marginTop: '16px' }}>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={showModal}\r\n                        disabled={isApproved}\r\n                    >\r\n                        {isApproved ? 'Đã phê duyệt' : 'Phê duyệt hồ sơ'}\r\n                    </Button>\r\n                    <Button\r\n                        type=\"default\"\r\n                        onClick={showRejectModal}\r\n                        disabled={isRejected}\r\n                    >\r\n                        {isRejected ? 'Đã từ chối' : 'Từ chối hồ sơ'}\r\n                    </Button>\r\n                </div>\r\n            </Drawer>\r\n            <Modal\r\n                title=\"Xác nhận phê duyệt\"\r\n                open={isModalVisible}\r\n                onOk={handleApproveCV}\r\n                onCancel={handleCancel}\r\n                okText=\"Phê duyệt\"\r\n                cancelText=\"Hủy\"\r\n                confirmLoading={isLoading}\r\n            >\r\n                <p>Bạn có chắc chắn muốn phê duyệt hồ sơ này không?</p>\r\n            </Modal>\r\n            <Modal\r\n                title=\"Xác nhận từ chối\"\r\n                open={isRejectModalVisible}\r\n                onOk={handleRejectCV}\r\n                onCancel={handleRejectCancel}\r\n                okText=\"Từ chối\"\r\n                cancelText=\"Hủy\"\r\n                confirmLoading={isLoading}\r\n            >\r\n                <p>Bạn có chắc chắn muốn từ chối hồ sơ này không?</p>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Ungvien;\r\n"],"names":["Option","Select","Dashboard","cvData","setCvData","useState","stats","setStats","totalApplications","savedApplications","approvedApplications","applicationsToday","timeRange","setTimeRange","chartOptions","setChartOptions","isMobile","setIsMobile","window","innerWidth","drawerVisible","setDrawerVisible","accessTimeRange","setAccessTimeRange","filteredAccessCount","setFilteredAccessCount","navigate","useNavigate","useEffect","handleResize","addEventListener","removeEventListener","filterDataByTimeRange","useCallback","data","startDate","week","moment","startOf","month","year","filter","cv","NgayGuiCV","isSameOrAfter","updateChartOptions","filteredData","categories","map","format","totalApplicationsData","approvedApplicationsData","PheDuyet","title","text","xAxis","yAxis","series","name","async","demTruyCapRef","doc","db","docSnap","getDoc","exists","today","count","date","indexOf","reduce","acc","index","isSame","fetchAccessData","handleAccessTimeRangeChange","value","q","query","collection","querySnapshot","getDocs","sortedData","docs","id","sort","a","b","valueOf","calculateStats","err","console","error","fetchCVData","length","LuuHoSo","renderStatsCards","_jsxs","className","children","_jsx","Card","CardBody","CardTitle","CardText","Button","type","onClick","icon","MdArrowRightAlt","defaultValue","style","width","onChange","_Fragment","showDrawer","marginBottom","Drawer","placement","closable","onClose","hideDrawer","visible","Header","slice","Khoiungtuyen","Vitriungtuyen","UserOutlined","HoTen","MailOutlined","Email","PhoneOutlined","SoDienThoai","height","viewBox","fill","xmlns","d","Ungvien","Form","Group","marginTop","Label","Control","as","e","target","HighchartsReact","highcharts","Highcharts","options","Title","Text","Typography","_ref","onUpdate","setVisible","isModalVisible","setIsModalVisible","isRejectModalVisible","setIsRejectModalVisible","isApproved","setIsApproved","isRejected","setIsRejected","TuChoi","isLoading","setIsLoading","open","display","flexDirection","gap","alignItems","Avatar","size","src","Hinhdaidien","level","class","Descriptions","column","Item","label","Ngaysinh","CMND","GioiTinh","ChieuCao","CanNang","Diachi","Phuongxa","Quanhuyen","City","Thunhapmongmuon","Kinhnghiem","KinhNghiemLamViec","Object","entries","_ref2","key","exp","Meta","ViTriDamNhiem","description","CongTyDoanhNghiep","TuNgay","DangLamViec","DenNgay","MoTaCongViec","labelStyle","Cauhoi1","Cauhoi2","Cauhoi3","Cauhoi4","showModal","disabled","showRejectModal","Modal","onOk","cvRef","updateDoc","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","message","onCancel","handleCancel","okText","cancelText","confirmLoading","handleRejectCancel"],"sourceRoot":""}