{"version":3,"file":"static/js/105.f41fbc75.chunk.js","mappings":"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","sources":["admin/components/Hosodaluu.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { collection, query, getDocs, doc, updateDoc, deleteDoc } from 'firebase/firestore';\r\nimport { db } from '../../config';\r\nimport { Button, Drawer, Input, DatePicker, Pagination, Empty, Avatar, message, Modal, Space } from 'antd';\r\nimport moment from 'moment';\r\nimport Loading from '../../components/Loading';\r\nimport NotFound from '../../components/NotFound';\r\nimport Ungvien from './Hoso/Ungvien';\r\nimport { UserOutlined, MailOutlined, PhoneOutlined, IdcardOutlined, DeleteOutlined, SaveOutlined } from '@ant-design/icons';\r\nimport { FaUserTie } from 'react-icons/fa';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Hosodaluu = () => {\r\n    const [cvData, setCvData] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [selectedCV, setSelectedCV] = useState(null);\r\n    const [drawerOpen, setDrawerOpen] = useState(false);\r\n    const [cvLoading, setCVLoading] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [filterDate, setFilterDate] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [isUnsaveModalVisible, setIsUnsaveModalVisible] = useState(false);\r\n    const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [cvToModify, setCvToModify] = useState(null);\r\n\r\n    const pageSize = 20;\r\n\r\n    useEffect(() => {\r\n        const fetchCVData = async () => {\r\n            try {\r\n                const q = query(collection(db, 'CV'));\r\n                const querySnapshot = await getDocs(q);\r\n                const data = querySnapshot.docs\r\n                    .map(doc => ({\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    }))\r\n                    .filter(cv => cv.LuuHoSo === true);\r\n\r\n                const sortedData = data.sort((a, b) =>\r\n                    moment(b.NgayGuiCV, 'DD/MM/YYYY').valueOf() - moment(a.NgayGuiCV, 'DD/MM/YYYY').valueOf()\r\n                );\r\n\r\n                setCvData(sortedData);\r\n                setFilteredData(sortedData);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                console.error(\"Error fetching CV data: \", err);\r\n                setError(\"An error occurred while fetching data\");\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchCVData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const filtered = cvData.filter(cv => {\r\n            const matchesSearch = cv.HoTen.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                cv.Email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                cv.Vitriungtuyen.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n            const matchesDate = filterDate ? moment(cv.NgayGuiCV, 'DD/MM/YYYY').isSame(filterDate, 'day') : true;\r\n\r\n            return matchesSearch && matchesDate;\r\n        });\r\n\r\n        setFilteredData(filtered);\r\n        setCurrentPage(1);\r\n    }, [searchTerm, filterDate, cvData]);\r\n\r\n    const handleViewCV = (cv) => {\r\n        setSelectedCV(cv);\r\n        setCVLoading(true);\r\n        setDrawerOpen(true);\r\n        setTimeout(() => setCVLoading(false), 1500);\r\n    };\r\n\r\n    const handleSearch = (e) => {\r\n        setSearchTerm(e.target.value);\r\n    };\r\n\r\n    const handleDateChange = (date) => {\r\n        setFilterDate(date);\r\n    };\r\n\r\n    const handleUnsaveCV = (cv) => {\r\n        setCvToModify(cv);\r\n        setIsUnsaveModalVisible(true);\r\n    };\r\n\r\n    const handleDeleteCV = (cv) => {\r\n        setCvToModify(cv);\r\n        setIsDeleteModalVisible(true);\r\n    };\r\n\r\n    const confirmUnsaveCV = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const cvRef = doc(db, 'CV', cvToModify.id);\r\n            await updateDoc(cvRef, {\r\n                LuuHoSo: false\r\n            });\r\n            toast.success('Đã bỏ lưu hồ sơ.', {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            setCvData(prevData => prevData.filter(item => item.id !== cvToModify.id));\r\n            setFilteredData(prevData => prevData.filter(item => item.id !== cvToModify.id));\r\n            setIsUnsaveModalVisible(false);\r\n        } catch (error) {\r\n            console.error(\"Error unsaving CV: \", error);\r\n            message.error('Có lỗi xảy ra khi bỏ lưu hồ sơ');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const confirmDeleteCV = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const cvRef = doc(db, 'CV', cvToModify.id);\r\n            await deleteDoc(cvRef);\r\n            toast.success('Đã xóa hồ sơ.', {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            setCvData(prevData => prevData.filter(item => item.id !== cvToModify.id));\r\n            setFilteredData(prevData => prevData.filter(item => item.id !== cvToModify.id));\r\n            setIsDeleteModalVisible(false);\r\n        } catch (error) {\r\n            console.error(\"Error deleting CV: \", error);\r\n            message.error('Có lỗi xảy ra khi xóa hồ sơ');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const paginatedData = filteredData.slice((currentPage - 1) * pageSize, (currentPage) * pageSize);\r\n\r\n    if (loading) return <Loading />;\r\n    if (error) {\r\n        toast.error(\"Có lỗi xảy ra. Vui lòng thử lại.\", {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n        return <NotFound />;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mb-4\">\r\n                <Input\r\n                    placeholder=\"Tìm kiếm theo tên, email hoặc vị trí\"\r\n                    onChange={handleSearch}\r\n                    size='large'\r\n                    style={{ marginBottom: 15 }}\r\n                />\r\n                <Space>\r\n                    <DatePicker\r\n                        onChange={handleDateChange}\r\n                        format=\"DD/MM/YYYY\"\r\n                        placeholder=\"Lọc theo ngày gửi CV\"\r\n                    />\r\n                </Space>\r\n            </div>\r\n\r\n            {filteredData.length === 0 ? (\r\n                <Empty description=\"Không tìm thấy hồ sơ nào đã lưu\" />\r\n            ) : (\r\n                <>\r\n                    <div className=\"row\">\r\n                        {paginatedData.map(cv => (\r\n                            <div key={cv.id} className=\"col-md-3 mb-4\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body lh-lg\">\r\n                                        <div className=\"d-flex align-items-center\">\r\n                                            <Avatar\r\n                                                size={48}\r\n                                                src={cv.Hinhdaidien}\r\n                                                icon={!cv.Hinhdaidien && <UserOutlined />}\r\n                                                className=\"me-3\"\r\n                                            />\r\n                                            <h2 className=\"card-title\" style={{\r\n                                                maxWidth: '250px',\r\n                                                whiteSpace: 'nowrap',\r\n                                                overflow: 'hidden',\r\n                                                textOverflow: 'ellipsis'\r\n                                            }}>\r\n                                                {cv.Vitriungtuyen}\r\n                                            </h2>\r\n                                        </div>\r\n                                        <div className=\"apply-form__group-body--line\"></div>\r\n                                        <div className='d-flex justify-content-between align-items-center mt-2'>\r\n                                            <Ungvien cv={cv} />\r\n                                        </div>\r\n                                        <div className=\"apply-form__group-body--line\"></div>\r\n                                        <p className=\"card-text\">\r\n                                            <FaUserTie /> Tên ứng viên: {cv.HoTen}\r\n                                        </p>\r\n                                        <p className=\"card-text\">\r\n                                            <MailOutlined /> Email:\r\n                                            <a href={`mailto:${cv.Email}`} className=\"ms-2\">{cv.Email}</a>\r\n                                        </p>\r\n                                        <p className=\"card-text\">\r\n                                            <PhoneOutlined /> Số điện thoại:\r\n                                            <a href={`tel:${cv.SoDienThoai}`} className=\"ms-2\">{cv.SoDienThoai}</a>\r\n                                        </p>\r\n                                        <p className=\"card-text\">\r\n                                            <IdcardOutlined /> Ngày gửi CV: {cv.NgayGuiCV}\r\n                                        </p>\r\n                                        <div className=\"d-flex justify-content-between mt-3\">\r\n                                            {cv.CVFileUT && (\r\n                                                <Button onClick={() => handleViewCV(cv)}>Xem CV File</Button>\r\n                                            )}\r\n                                            <Button\r\n                                                icon={<SaveOutlined />}\r\n                                                onClick={() => handleUnsaveCV(cv)}\r\n                                            >\r\n                                                Bỏ lưu\r\n                                            </Button>\r\n                                            <Button\r\n                                                icon={<DeleteOutlined />}\r\n                                                onClick={() => handleDeleteCV(cv)}\r\n                                                danger\r\n                                            >\r\n                                                Xóa\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <Pagination\r\n                        current={currentPage}\r\n                        total={filteredData.length}\r\n                        pageSize={pageSize}\r\n                        onChange={setCurrentPage}\r\n                        showSizeChanger={false}\r\n                        className=\"mt-4\"\r\n                    />\r\n                </>\r\n            )}\r\n\r\n            <Drawer\r\n                title={<>CV của {selectedCV?.HoTen}</>}\r\n                placement=\"right\"\r\n                onClose={() => setDrawerOpen(false)}\r\n                open={drawerOpen}\r\n                width={800}\r\n            >\r\n                {cvLoading ? (\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <div className=\"spinner-border\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    selectedCV?.CVFileUT && (\r\n                        <>\r\n                            <iframe\r\n                                src={selectedCV.CVFileUT}\r\n                                style={{ width: '100%', height: '86vh', border: 'none' }}\r\n                                title={`CV của ${selectedCV.HoTen}`}\r\n                            />\r\n                            <Button onClick={() => window.open(`${selectedCV.CVFileUT}`, '_blank')} type='primary'>Xem đầy đủ</Button>\r\n                        </>\r\n                    )\r\n                )}\r\n            </Drawer>\r\n\r\n            <Modal\r\n                title=\"Xác nhận\"\r\n                visible={isUnsaveModalVisible}\r\n                onOk={confirmUnsaveCV}\r\n                onCancel={() => setIsUnsaveModalVisible(false)}\r\n                confirmLoading={isLoading}\r\n                okText=\"Bỏ lưu\"\r\n                cancelText=\"Hủy\"\r\n            >\r\n                Bạn có chắc chắn muốn bỏ lưu hồ sơ của <strong>{cvToModify?.HoTen}</strong>?\r\n            </Modal>\r\n\r\n            <Modal\r\n                title=\"Xác nhận\"\r\n                visible={isDeleteModalVisible}\r\n                onOk={confirmDeleteCV}\r\n                onCancel={() => setIsDeleteModalVisible(false)}\r\n                confirmLoading={isLoading}\r\n                okText=\"Xóa\"\r\n                cancelText=\"Hủy\"\r\n            >\r\n                Bạn có chắc chắn muốn xóa hồ sơ của <strong>{cvToModify?.HoTen}</strong>?\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Hosodaluu;"],"names":["Hosodaluu","cvData","setCvData","useState","filteredData","setFilteredData","loading","setLoading","error","setError","selectedCV","setSelectedCV","drawerOpen","setDrawerOpen","cvLoading","setCVLoading","searchTerm","setSearchTerm","filterDate","setFilterDate","currentPage","setCurrentPage","isUnsaveModalVisible","setIsUnsaveModalVisible","isDeleteModalVisible","setIsDeleteModalVisible","isLoading","setIsLoading","cvToModify","setCvToModify","useEffect","async","q","query","collection","db","querySnapshot","getDocs","sortedData","docs","map","doc","id","data","filter","cv","LuuHoSo","sort","a","b","moment","NgayGuiCV","valueOf","err","console","fetchCVData","filtered","matchesSearch","HoTen","toLowerCase","includes","Email","Vitriungtuyen","matchesDate","isSame","paginatedData","slice","_jsx","Loading","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","NotFound","_jsxs","_Fragment","children","className","Input","placeholder","onChange","e","target","value","size","style","marginBottom","Space","DatePicker","date","format","length","Empty","description","Avatar","src","Hinhdaidien","icon","UserOutlined","maxWidth","whiteSpace","overflow","textOverflow","Ungvien","FaUserTie","MailOutlined","href","PhoneOutlined","SoDienThoai","IdcardOutlined","CVFileUT","Button","onClick","setTimeout","handleViewCV","SaveOutlined","handleUnsaveCV","DeleteOutlined","handleDeleteCV","danger","Pagination","current","total","pageSize","showSizeChanger","Drawer","title","placement","onClose","open","width","role","height","border","window","type","Modal","visible","onOk","cvRef","updateDoc","success","prevData","item","message","onCancel","confirmLoading","okText","cancelText","deleteDoc"],"sourceRoot":""}