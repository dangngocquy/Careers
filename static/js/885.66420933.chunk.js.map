{"version":3,"file":"static/js/885.66420933.chunk.js","mappings":"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","sources":["admin/components/Hosoungtuyen.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { collection, query, getDocs, doc, updateDoc, deleteDoc } from 'firebase/firestore';\r\nimport { db } from '../../config';\r\nimport { Button, Drawer, Input, DatePicker, Pagination, Empty, Avatar, message, Modal, Select, Space } from 'antd';\r\nimport moment from 'moment';\r\nimport Loading from '../../components/Loading';\r\nimport NotFound from '../../components/NotFound';\r\nimport Ungvien from './Hoso/Ungvien';\r\nimport { UserOutlined, MailOutlined, PhoneOutlined, IdcardOutlined, CheckOutlined, SaveOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { FaUserTie } from 'react-icons/fa';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Hosoungtuyen = () => {\r\n  const [cvData, setCvData] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedCV, setSelectedCV] = useState(null);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [cvLoading, setCVLoading] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterDate, setFilterDate] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [cvToSave, setCvToSave] = useState(null);\r\n  const [filterOption, setFilterOption] = useState(null);\r\n  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\r\n  const [cvToDelete, setCvToDelete] = useState(null);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n\r\n  const pageSize = 20;\r\n\r\n  useEffect(() => {\r\n    const fetchCVData = async () => {\r\n      try {\r\n        const q = query(collection(db, 'CV'));\r\n        const querySnapshot = await getDocs(q);\r\n        const data = querySnapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n\r\n        const sortedData = data.sort((a, b) =>\r\n          moment(b.NgayGuiCV, 'DD/MM/YYYY').valueOf() - moment(a.NgayGuiCV, 'DD/MM/YYYY').valueOf()\r\n        );\r\n\r\n        setCvData(sortedData);\r\n        setFilteredData(sortedData);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(\"Error fetching CV data: \", err);\r\n        setError(\"An error occurred while fetching data\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCVData();\r\n  }, []);\r\n\r\n  const handleDeleteCV = (cv) => {\r\n    setCvToDelete(cv);\r\n    setIsDeleteModalVisible(true);\r\n  };\r\n\r\n  const confirmDeleteCV = async () => {\r\n    setIsDeleting(true);\r\n    try {\r\n      const cvRef = doc(db, 'CV', cvToDelete.id);\r\n      await deleteDoc(cvRef);\r\n      toast.success('Đã xóa hồ sơ.', {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      setCvData(prevData => prevData.filter(item => item.id !== cvToDelete.id));\r\n      setFilteredData(prevData => prevData.filter(item => item.id !== cvToDelete.id));\r\n      setIsDeleteModalVisible(false);\r\n    } catch (error) {\r\n      console.error(\"Error deleting CV: \", error);\r\n      message.error('Có lỗi xảy ra khi xóa hồ sơ');\r\n    } finally {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const filtered = cvData.filter(cv => {\r\n      const matchesSearch = cv.HoTen.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        cv.Email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        cv.Vitriungtuyen.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n      const matchesDate = filterDate ? moment(cv.NgayGuiCV, 'DD/MM/YYYY').isSame(filterDate, 'day') : true;\r\n\r\n      return matchesSearch && matchesDate;\r\n    });\r\n\r\n    const filteredByOption = filtered.filter(cv => {\r\n      if (filterOption === 'LuuHoSo') return cv.LuuHoSo === true;\r\n      if (filterOption === 'PheDuyet') return cv.PheDuyet === true;\r\n      return true;\r\n    });\r\n\r\n    setFilteredData(filteredByOption);\r\n    setCurrentPage(1);\r\n  }, [searchTerm, filterDate, filterOption, cvData]);\r\n\r\n  const handleViewCV = (cv) => {\r\n    setSelectedCV(cv);\r\n    setCVLoading(true);\r\n    setDrawerOpen(true);\r\n    setTimeout(() => setCVLoading(false), 1500);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setFilterDate(date);\r\n  };\r\n\r\n  const handleSaveCV = (cv) => {\r\n    setCvToSave(cv);\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const confirmSaveCV = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const cvRef = doc(db, 'CV', cvToSave.id);\r\n      await updateDoc(cvRef, {\r\n        LuuHoSo: true\r\n      });\r\n      toast.success('Đã lưu hồ sơ.', {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      setCvData(prevData => prevData.map(item =>\r\n        item.id === cvToSave.id ? { ...item, LuuHoSo: true } : item\r\n      ));\r\n      setFilteredData(prevData => prevData.map(item =>\r\n        item.id === cvToSave.id ? { ...item, LuuHoSo: true } : item\r\n      ));\r\n      setIsModalVisible(false);\r\n    } catch (error) {\r\n      console.error(\"Error saving CV: \", error);\r\n      message.error('Có lỗi xảy ra khi lưu hồ sơ');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const paginatedData = filteredData.slice((currentPage - 1) * pageSize, (currentPage) * pageSize);\r\n\r\n  if (loading) return <Loading />;\r\n  if (error) return <NotFound />;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-4\">\r\n        <Input\r\n          placeholder=\"Tìm kiếm theo tên, email hoặc vị trí\"\r\n          onChange={handleSearch}\r\n          size='large'\r\n          style={{ marginBottom: 15 }}\r\n        />\r\n        <Space>\r\n          <DatePicker\r\n            onChange={handleDateChange}\r\n            format=\"DD/MM/YYYY\"\r\n            placeholder=\"Lọc theo ngày gửi CV\"\r\n            style={{ marginRight: 15 }}\r\n          />\r\n          <Select\r\n            placeholder=\"Chọn bộ lọc\"\r\n            style={{ width: 200 }}\r\n            onChange={value => setFilterOption(value)}\r\n            allowClear\r\n          >\r\n            <Select.Option value=\"PheDuyet\">Hồ sơ đã phê duyệt</Select.Option>\r\n            <Select.Option value=\"LuuHoSo\">Hồ sơ đã lưu</Select.Option>\r\n          </Select>\r\n        </Space>\r\n      </div>\r\n\r\n      {filteredData.length === 0 ? (\r\n        <Empty description=\"Không tìm thấy hồ sơ nào\" />\r\n      ) : (\r\n        <>\r\n          <div className=\"row\">\r\n            {paginatedData.map(cv => (\r\n              <div key={cv.id} className=\"col-md-3 mb-4\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body lh-lg\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <Avatar\r\n                        size={48}\r\n                        src={cv.Hinhdaidien}\r\n                        icon={!cv.Hinhdaidien && <UserOutlined />}\r\n                        className=\"me-3\"\r\n                      />\r\n                      <h2 className=\"card-title\" style={{\r\n                        maxWidth: '250px',\r\n                        whiteSpace: 'nowrap',\r\n                        overflow: 'hidden',\r\n                        textOverflow: 'ellipsis'\r\n                      }}>\r\n                        {cv.Vitriungtuyen}\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"apply-form__group-body--line\"></div>\r\n                    <div className='d-flex justify-content-between align-items-center mt-2'>\r\n                      <Ungvien cv={cv} />\r\n                    </div>\r\n                    <div className=\"apply-form__group-body--line\"></div>\r\n                    <p className=\"card-text\">\r\n                      <FaUserTie /> Tên ứng viên: {cv.HoTen}\r\n                    </p>\r\n                    <p className=\"card-text\">\r\n                      <MailOutlined /> Email:\r\n                      <a href={`mailto:${cv.Email}`} className=\"ms-2\">{cv.Email}</a>\r\n                    </p>\r\n                    <p className=\"card-text\">\r\n                      <PhoneOutlined /> Số điện thoại:\r\n                      <a href={`tel:${cv.SoDienThoai}`} className=\"ms-2\">{cv.SoDienThoai}</a>\r\n                    </p>\r\n                    <p className=\"card-text\">\r\n                      <IdcardOutlined /> Ngày gửi CV: {cv.NgayGuiCV}\r\n                    </p>\r\n                    <div className=\"d-flex justify-content-between mt-3\">\r\n                      {cv.CVFileUT && (\r\n                        <Button onClick={() => handleViewCV(cv)}>Xem CV File</Button>\r\n                      )}\r\n                      <Button\r\n                        icon={cv.LuuHoSo ? <CheckOutlined /> : <SaveOutlined />}\r\n                        onClick={() => handleSaveCV(cv)}\r\n                        disabled={cv.LuuHoSo}\r\n                      >\r\n                        {cv.LuuHoSo ? 'Đã lưu' : 'Lưu hồ sơ'}\r\n                      </Button>\r\n                      <Button\r\n                        icon={<DeleteOutlined />}\r\n                        onClick={() => handleDeleteCV(cv)}\r\n                        danger\r\n                      >\r\n                        Xóa\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <Pagination\r\n            current={currentPage}\r\n            total={filteredData.length}\r\n            pageSize={pageSize}\r\n            onChange={setCurrentPage}\r\n            showSizeChanger={false}\r\n            className=\"mt-4\"\r\n          />\r\n        </>\r\n      )}\r\n\r\n      <Drawer\r\n        title={<>CV của {selectedCV?.HoTen}</>}\r\n        placement=\"right\"\r\n        onClose={() => setDrawerOpen(false)}\r\n        open={drawerOpen}\r\n        width={800}\r\n      >\r\n        {cvLoading ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          selectedCV?.CVFileUT && (\r\n            <>\r\n              <iframe\r\n                src={selectedCV.CVFileUT}\r\n                style={{ width: '100%', height: '86vh', border: 'none' }}\r\n                title={`CV của ${selectedCV.HoTen}`}\r\n              />\r\n              <Button onClick={() => window.open(`${selectedCV.CVFileUT}`, '_blank')} type='primary'>Xem đầy đủ</Button>\r\n            </>\r\n          )\r\n        )}\r\n      </Drawer>\r\n      <Modal\r\n        title=\"Xác nhận xóa\"\r\n        visible={isDeleteModalVisible}\r\n        onOk={confirmDeleteCV}\r\n        onCancel={() => setIsDeleteModalVisible(false)}\r\n        confirmLoading={isDeleting}\r\n        okText=\"Xóa\"\r\n        cancelText=\"Hủy\"\r\n      >\r\n        Bạn có chắc chắn muốn xóa hồ sơ của <strong>{cvToDelete?.HoTen}</strong>?\r\n      </Modal>\r\n      <Modal\r\n        title=\"Xác nhận\"\r\n        visible={isModalVisible}\r\n        onOk={confirmSaveCV}\r\n        onCancel={() => setIsModalVisible(false)}\r\n        confirmLoading={isLoading}\r\n        okText=\"Lưu\"\r\n        cancelText=\"Hủy\"\r\n      >\r\n        Bạn có chắc chắn muốn lưu hồ sơ của <strong>{cvToSave?.HoTen}</strong>?\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hosoungtuyen;\r\n"],"names":["Hosoungtuyen","cvData","setCvData","useState","filteredData","setFilteredData","loading","setLoading","error","setError","selectedCV","setSelectedCV","drawerOpen","setDrawerOpen","cvLoading","setCVLoading","searchTerm","setSearchTerm","filterDate","setFilterDate","currentPage","setCurrentPage","isModalVisible","setIsModalVisible","isLoading","setIsLoading","cvToSave","setCvToSave","filterOption","setFilterOption","isDeleteModalVisible","setIsDeleteModalVisible","cvToDelete","setCvToDelete","isDeleting","setIsDeleting","useEffect","async","q","query","collection","db","querySnapshot","getDocs","sortedData","docs","map","doc","id","data","sort","a","b","moment","NgayGuiCV","valueOf","err","console","fetchCVData","filteredByOption","filter","cv","matchesSearch","HoTen","toLowerCase","includes","Email","Vitriungtuyen","matchesDate","isSame","LuuHoSo","PheDuyet","paginatedData","slice","_jsx","Loading","NotFound","_jsxs","_Fragment","children","className","Input","placeholder","onChange","e","target","value","size","style","marginBottom","Space","DatePicker","date","format","marginRight","Select","width","allowClear","Option","length","Empty","description","Avatar","src","Hinhdaidien","icon","UserOutlined","maxWidth","whiteSpace","overflow","textOverflow","Ungvien","FaUserTie","MailOutlined","href","PhoneOutlined","SoDienThoai","IdcardOutlined","CVFileUT","Button","onClick","setTimeout","handleViewCV","CheckOutlined","SaveOutlined","handleSaveCV","disabled","DeleteOutlined","handleDeleteCV","danger","Pagination","current","total","pageSize","showSizeChanger","Drawer","title","placement","onClose","open","role","height","border","window","type","Modal","visible","onOk","cvRef","deleteDoc","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","prevData","item","message","onCancel","confirmLoading","okText","cancelText","updateDoc"],"sourceRoot":""}