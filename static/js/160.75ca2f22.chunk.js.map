{"version":3,"file":"static/js/160.75ca2f22.chunk.js","mappings":"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","sources":["admin/components/Login.jsx","../node_modules/antd/es/_util/responsiveObserver.js","../node_modules/antd/es/locale/useLocale.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { signInWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth';\r\nimport { auth } from '../../config';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Login = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        navigate('/auth/dashboard');\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [navigate]);\r\n\r\n  const onFinish = async (values) => {\r\n    setLoading(true);\r\n    try {\r\n      await signInWithEmailAndPassword(auth, values.email, values.password);\r\n      toast.success('Đăng nhập thành công', {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      navigate('/auth//dashboard');\r\n    } catch (error) {\r\n      console.error(\"Lỗi đăng nhập:\", error);\r\n      if (error.code === 'auth/invalid-credential') {\r\n        toast.error('Sai thông tin đăng nhập', {\r\n          position: \"top-right\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      } else {\r\n        toast.error('Sai thông tin đăng nhập', {\r\n          position: \"top-right\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 300, margin: '100px auto' }}>\r\n      <title>Đăng nhập Niso Careers</title>\r\n      <h2 style={{ marginBottom: 15 }}>Đăng nhập Creers</h2>\r\n      <Form onFinish={onFinish}>\r\n        <Form.Item name=\"email\" rules={[{ required: true, message: 'Vui lòng nhập email!' }]}>\r\n          <Input placeholder=\"Email\" size='large' />\r\n        </Form.Item>\r\n        <Form.Item name=\"password\" rules={[{ required: true, message: 'Vui lòng nhập mật khẩu!' }]}>\r\n          <Input.Password placeholder=\"Mật khẩu\" size='large' />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} block size='large'>\r\n            Đăng nhập\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\nimport { useToken } from '../theme/internal';\nexport const responsiveArray = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst getResponsiveMap = token => ({\n  xs: `(max-width: ${token.screenXSMax}px)`,\n  sm: `(min-width: ${token.screenSM}px)`,\n  md: `(min-width: ${token.screenMD}px)`,\n  lg: `(min-width: ${token.screenLG}px)`,\n  xl: `(min-width: ${token.screenXL}px)`,\n  xxl: `(min-width: ${token.screenXXL}px)`\n});\n/**\n * Ensures that the breakpoints token are valid, in good order\n * For each breakpoint : screenMin <= screen <= screenMax and screenMax <= nextScreenMin\n */\nconst validateBreakpoints = token => {\n  const indexableToken = token;\n  const revBreakpoints = [].concat(responsiveArray).reverse();\n  revBreakpoints.forEach((breakpoint, i) => {\n    const breakpointUpper = breakpoint.toUpperCase();\n    const screenMin = `screen${breakpointUpper}Min`;\n    const screen = `screen${breakpointUpper}`;\n    if (!(indexableToken[screenMin] <= indexableToken[screen])) {\n      throw new Error(`${screenMin}<=${screen} fails : !(${indexableToken[screenMin]}<=${indexableToken[screen]})`);\n    }\n    if (i < revBreakpoints.length - 1) {\n      const screenMax = `screen${breakpointUpper}Max`;\n      if (!(indexableToken[screen] <= indexableToken[screenMax])) {\n        throw new Error(`${screen}<=${screenMax} fails : !(${indexableToken[screen]}<=${indexableToken[screenMax]})`);\n      }\n      const nextBreakpointUpperMin = revBreakpoints[i + 1].toUpperCase();\n      const nextScreenMin = `screen${nextBreakpointUpperMin}Min`;\n      if (!(indexableToken[screenMax] <= indexableToken[nextScreenMin])) {\n        throw new Error(`${screenMax}<=${nextScreenMin} fails : !(${indexableToken[screenMax]}<=${indexableToken[nextScreenMin]})`);\n      }\n    }\n  });\n  return token;\n};\nexport default function useResponsiveObserver() {\n  const [, token] = useToken();\n  const responsiveMap = getResponsiveMap(validateBreakpoints(token));\n  // To avoid repeat create instance, we add `useMemo` here.\n  return React.useMemo(() => {\n    const subscribers = new Map();\n    let subUid = -1;\n    let screens = {};\n    return {\n      matchHandlers: {},\n      dispatch(pointMap) {\n        screens = pointMap;\n        subscribers.forEach(func => func(screens));\n        return subscribers.size >= 1;\n      },\n      subscribe(func) {\n        if (!subscribers.size) this.register();\n        subUid += 1;\n        subscribers.set(subUid, func);\n        func(screens);\n        return subUid;\n      },\n      unsubscribe(paramToken) {\n        subscribers.delete(paramToken);\n        if (!subscribers.size) this.unregister();\n      },\n      unregister() {\n        Object.keys(responsiveMap).forEach(screen => {\n          const matchMediaQuery = responsiveMap[screen];\n          const handler = this.matchHandlers[matchMediaQuery];\n          handler === null || handler === void 0 ? void 0 : handler.mql.removeListener(handler === null || handler === void 0 ? void 0 : handler.listener);\n        });\n        subscribers.clear();\n      },\n      register() {\n        Object.keys(responsiveMap).forEach(screen => {\n          const matchMediaQuery = responsiveMap[screen];\n          const listener = _ref => {\n            let {\n              matches\n            } = _ref;\n            this.dispatch(Object.assign(Object.assign({}, screens), {\n              [screen]: matches\n            }));\n          };\n          const mql = window.matchMedia(matchMediaQuery);\n          mql.addListener(listener);\n          this.matchHandlers[matchMediaQuery] = {\n            mql,\n            listener\n          };\n          listener(mql);\n        });\n      },\n      responsiveMap\n    };\n  }, [token]);\n}\nexport const matchScreen = (screens, screenSizes) => {\n  if (screenSizes && typeof screenSizes === 'object') {\n    for (let i = 0; i < responsiveArray.length; i++) {\n      const breakpoint = responsiveArray[i];\n      if (screens[breakpoint] && screenSizes[breakpoint] !== undefined) {\n        return screenSizes[breakpoint];\n      }\n    }\n  }\n};","import * as React from 'react';\nimport LocaleContext from './context';\nimport defaultLocaleData from './en_US';\nconst useLocale = (componentName, defaultLocale) => {\n  const fullLocale = React.useContext(LocaleContext);\n  const getLocale = React.useMemo(() => {\n    var _a;\n    const locale = defaultLocale || defaultLocaleData[componentName];\n    const localeFromContext = (_a = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return Object.assign(Object.assign({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, fullLocale]);\n  const getLocaleCode = React.useMemo(() => {\n    const localeCode = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.locale;\n    // Had use LocaleProvide but didn't set locale\n    if ((fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.exist) && !localeCode) {\n      return defaultLocaleData.locale;\n    }\n    return localeCode;\n  }, [fullLocale]);\n  return [getLocale, getLocaleCode];\n};\nexport default useLocale;"],"names":["Login","loading","setLoading","useState","navigate","useNavigate","useEffect","unsubscribe","onAuthStateChanged","auth","user","_jsxs","style","maxWidth","margin","children","_jsx","marginBottom","Form","onFinish","async","signInWithEmailAndPassword","values","email","password","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","console","code","Item","name","rules","required","message","Input","placeholder","size","Password","Button","type","htmlType","block","responsiveArray","getResponsiveMap","token","xs","screenXSMax","sm","screenSM","md","screenMD","lg","screenLG","xl","screenXL","xxl","screenXXL","validateBreakpoints","indexableToken","revBreakpoints","concat","reverse","forEach","breakpoint","i","breakpointUpper","toUpperCase","screenMin","screen","Error","length","screenMax","nextScreenMin","useResponsiveObserver","useToken","responsiveMap","React","subscribers","Map","subUid","screens","matchHandlers","dispatch","pointMap","func","subscribe","this","register","set","paramToken","delete","unregister","Object","keys","matchMediaQuery","handler","mql","removeListener","listener","clear","_ref","matches","assign","window","matchMedia","addListener","matchScreen","screenSizes","useLocale","componentName","defaultLocale","fullLocale","LocaleContext","_a","locale","defaultLocaleData","localeFromContext","localeCode","exist"],"sourceRoot":""}